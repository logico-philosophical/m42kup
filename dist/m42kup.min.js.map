{"version":3,"sources":["webpack://m42kup/webpack/universalModuleDefinition","webpack://m42kup/webpack/bootstrap","webpack://m42kup/./src/renderer/nodes/Node.ts","webpack://m42kup/./src/renderer/nodes/ElementClass.ts","webpack://m42kup/./src/renderer/nodes/Element.ts","webpack://m42kup/./src/renderer/nodes/ErrorNode.ts","webpack://m42kup/./src/renderer/nodes/escapeHtml.ts","webpack://m42kup/./src/renderer/nodes/HtmlNode.ts","webpack://m42kup/./src/renderer/nodes/TextNode.ts","webpack://m42kup/./src/cascade.ts","webpack://m42kup/./src/entry.ts","webpack://m42kup/./src/parser.ts","webpack://m42kup/./dist/peg.js","webpack://m42kup/./src/renderer/index.ts","webpack://m42kup/./src/renderer/elements/default.ts","webpack://m42kup/./src/highlighter.ts","webpack://m42kup/./src/codemirror.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","Node","toIndentedString","ElementClass","display","render","split","TypeError","includes","Function","el","options","Array","length","code","attributes","children","Element","super","foo","every","len","innerIsText","li","le","map","outerIsText","e","innerText","iit","text","outerText","join","innerHtml","it","trim","filter","toHtml","outerHtml","paragraphs","commit","push","add","forEach","isError","errorMessage","message","html","level","a","k","JSON","stringify","repeat","b","recurse","ErrorNode","escapeHtml","replace","'","HtmlNode","TextNode","shallow","o2","copyOptions","tags","hljs","katex","o1","globalOptions","m42kup","parser","renderer","highlighter","ast2nt","ast","input","pt","input2pt","pt2ast","highlight","pt2hl","cascade","cascadeOptions","set","setOptions","addCodeMirrorMode","parse","type","child","_type","content","attribute","substring","location","start","offset","end","reduce","peg$SyntaxError","expected","found","Error","captureStackTrace","peg$subclass","parent","ctor","constructor","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","describeExpected","j","descriptions","sort","slice","describeFound","SyntaxError","peg$parse","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$classExpectation","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c67","peg$c69","peg$c70","peg$c71","peg$c72","peg$c74","left","peg$c75","peg$c76","peg$c77","peg$c79","concat","peg$c80","whitespace","peg$c81","error","peg$c84","peg$c85","peg$c88","peg$c93","peg$c94","peg$c96","peg$c101","peg$c102","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildStructuredError","s0","s1","peg$parsethings","peg$parsething","peg$parseelement","s2","s3","s4","s5","peg$parselbm_push","peg$parselbm","bstack","peg$parsetag_name","s6","s7","s8","s9","test","charAt","peg$parseattributes","s10","s11","s12","peg$parseEOF","peg$parse__","peg$parserbm","right","separator","peg$parserbm_pop","pop","lbm","rbm","peg$parseverbatim","peg$parselvm","vlevel","peg$parseverbatim_separator","peg$parseverbatim_text","peg$parservm","lvm","rvm","peg$parsetext","peg$c7","peg$c90","peg$c100","rootClass","tagNameMap","default","tree","instantiate","recurseSplit","list","unshift","normalizeUrl","url","comment","entity","getAttribute","h","table","hh","fill","blockcode","trimmed","bi","link","href","htmlUrl","img","quotes","squote","normal","angle","corner","dquote","highlighted","commonLangs","lang","highlightAuto","math","rendered","renderToString","throwOnError","displayMode","strict","displaymath","aliases","makeHtml","fragment","ret","tmp","q","tmp2","STATE_ATTRIBUTE_DQUOTE","STATE_ATTRIBUTE_SQUOTE","CodeMirror","token","stream","state","levels","lvmLevel","rvmString","skipTo","match","skipToEnd","peek","status","lbmLevel","rbmString","next","backUp","defineMode","config","parserConfig","startState","baseColumn"],"mappings":"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","file":"m42kup.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"m42kup\"] = factory();\n\telse\n\t\troot[\"m42kup\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","export default abstract class Node {\n\n\tpublic toString() {\n\t\treturn this.toIndentedString(0);\n\t};\n\n\tpublic abstract toIndentedString(level: number): string;\n}","import Element from \"./Element\";\nimport Node from \"./Node\";\n\nexport interface ElementClassArgumentType {\n\tname: NonNullable<string>;\n\tdisplay: 'inline' | 'leaf-block' | 'container-block';\n\trender: Function;\n\tsplit?: string | any[];\n}\n\nexport interface ElementClassInstantiateArgumentType {\n\tcode: string;\n\tattributes: any[];\n\tchildren: Node[];\n\toptions: any;\n}\n\nexport default class ElementClass {\n\n\tpublic readonly name: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\tpublic readonly render: Function;\n\tpublic readonly split: string | any[];\n\n\tconstructor ({name, display, render, split}: ElementClassArgumentType) {\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(render instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\n\t\t[this.name, this.display] = [name, display];\n\n\t\tthis.render = (el, options) => {\n\t\t\tif (!(el instanceof Element))\n\t\t\t\tthrow TypeError('arg0 should be an instance of m42kup.renderer.Element');\n\t\t\treturn render(el, options);\n\t\t};\n\n\t\tif (typeof split != 'undefined') {\n\t\t\tif (typeof split == 'string') split = [split];\n\n\t\t\tif (!(split instanceof Array))\n\t\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\n\t\t\tif (!split.length)\n\t\t\t\tthrow TypeError('arg0.split.length == 0');\n\n\t\t\tthis.split = split;\n\t\t}\n\t}\n\n\tpublic instantiate({code, attributes, children, options}: ElementClassInstantiateArgumentType) {\n\t\t\n\t\treturn new Element({\n\t\t\tname: this.name,\n\t\t\tdisplay: this.display,\n\t\t\trender: this.render,\n\t\t\tcode,\n\t\t\tattributes,\n\t\t\tchildren,\n\t\t\tsplit: this.split,\n\t\t\toptions\n\t\t});\n\t};\n}","import { ElementClassArgumentType, ElementClassInstantiateArgumentType } from \"./ElementClass\";\nimport ErrorNode from \"./ErrorNode\";\nimport escapeHtml from \"./escapeHtml\";\nimport HtmlNode from \"./HtmlNode\";\nimport Node from \"./Node\";\nimport TextNode from \"./TextNode\";\n\ninterface ElementArgumentType\n\textends ElementClassArgumentType, ElementClassInstantiateArgumentType {\n}\n\nexport default class Element extends Node {\n\n\tpublic readonly name: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\tpublic readonly code: string;\n\tpublic readonly attributes: any[];\n\tpublic readonly children: Node[];\n\tpublic readonly split: string | any[];\n\tpublic readonly innerIsText: boolean;\n\tpublic readonly innerText: string;\n\tpublic readonly innerHtml: string;\n\tpublic readonly outerIsText: boolean;\n\tpublic readonly outerText: string;\n\tpublic readonly isError: boolean;\n\tpublic readonly errorMessage: string;\n\tpublic readonly outerHtml: string;\n\n\tconstructor ({name, display, render, code, attributes, children, split, options}: ElementArgumentType) {\n\t\tsuper();\n\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(render instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\t\tif (typeof code != 'string') throw TypeError('You give arg0 a bad code');\n\t\tif (!(attributes instanceof Array)) throw TypeError('attributes should be an array');\n\t\n\t\t(() => {\n\t\t\tvar foo = c => c instanceof Element\n\t\t\t\t|| c instanceof TextNode\n\t\t\t\t|| c instanceof ErrorNode\n\t\t\t\t|| ((c instanceof Array) && c.every(foo));\n\t\n\t\t\tif (!children.every(foo))\n\t\t\t\tthrow TypeError('All arg0.children should either be an Element, a TextNode, or an ErrorNode');\n\t\t})();\n\t\n\t\tif (typeof split != 'undefined') {\n\t\t\tif (typeof split == 'string') split = [split];\n\t\n\t\t\tif (!(split instanceof Array))\n\t\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\t\n\t\t\tif (!split.length)\n\t\t\t\tthrow TypeError('arg0.split.length == 0');\n\t\n\t\t\tthis.split = split;\n\t\t}\n\t\n\t\t[this.name, this.display, this.code, this.attributes, this.children]\n\t\t\t= [name, display, code, attributes, children];\n\t\n\t\tthis.innerIsText = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map(l => foo(l, le - 1));\n\t\t\t\t\n\t\t\t\treturn li.map(c => {\n\t\t\t\t\tif (c instanceof TextNode) return true;\n\t\t\t\t\tif (c instanceof ErrorNode) return false;\n\t\t\t\t\treturn c.outerIsText;\n\t\t\t\t}).every(e => e);\n\t\t\t};\n\t\n\t\t\treturn foo(children, len);\n\t\t})();\n\t\n\t\tthis.innerText = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i]));\n\t\t\t\t\n\t\t\t\treturn iit\n\t\t\t\t\t? li.map((c: any) => {\n\t\t\t\t\t\tif (c instanceof TextNode) return c.text;\n\t\t\t\t\t\treturn c.outerText;\n\t\t\t\t\t}).join('')\n\t\t\t\t\t: null;\n\t\t\t};\n\t\n\t\t\treturn foo(children, len, this.innerIsText);\n\t\t})();\n\t\n\t\tthis.innerHtml = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit, it) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i], it[i]));\n\t\n\t\t\t\tif (iit) {\n\t\t\t\t\tif (it.trim() && this.display == 'container-block') {\n\t\t\t\t\t\treturn it\n\t\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\t\t.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/)\n\t\t\t\t\t\t\t.filter(text => !!text.trim())\n\t\t\t\t\t\t\t.map(escapeHtml)\n\t\t\t\t\t\t\t.map(s => `<p>${s}</p>`).join('');\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn escapeHtml(it);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.display != 'container-block') {\n\t\t\t\t\t// join as HTML\n\t\t\t\t\treturn li.map(c => {\n\t\t\t\t\t\tif (c instanceof TextNode)\n\t\t\t\t\t\t\treturn escapeHtml(c.text);\n\t\t\t\t\t\tif (c instanceof ErrorNode)\n\t\t\t\t\t\t\treturn c.toHtml();\n\t\t\t\t\t\treturn c.outerHtml;\n\t\t\t\t\t}).join('');\n\t\t\t\t}\n\t\n\t\t\t\tvar paragraphs = [], p = [];\n\t\n\t\t\t\tvar commit = () => {\n\t\t\t\t\tif (p.length) {\n\t\t\t\t\t\tparagraphs.push(p);\n\t\t\t\t\t\tp = [];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar add = e => p.push(e);\n\t\n\t\t\t\tli.forEach(c => {\n\t\t\t\t\tif (c instanceof TextNode) {\n\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\tvar split = c.text.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/);\n\t\t\t\t\t\tif (split.length < 2) {\n\t\t\t\t\t\t\treturn add(c);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tsplit.forEach((s, i) => {\n\t\t\t\t\t\t\tif (s.trim()) add(this.text(s));\n\t\n\t\t\t\t\t\t\tif (i < split.length - 1) commit();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (c instanceof ErrorNode) {\n\t\t\t\t\t\t// treat errors like inlines\n\t\t\t\t\t\tadd(c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// blocks interrupt paragraphs\n\t\t\t\t\t\tif (c.display != 'inline') {\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\t// direct push to list differentiates non-paragraphs\n\t\t\t\t\t\t\tparagraphs.push(c);\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// inlines do not interrupt paragraphs\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tadd(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tcommit();\n\t\n\t\t\t\treturn paragraphs.map(p => {\n\t\t\t\t\tif (p instanceof Array) {\n\t\t\t\t\t\treturn '<p>' + p.map(n => {\n\t\t\t\t\t\t\tif (n instanceof TextNode)\n\t\t\t\t\t\t\t\treturn escapeHtml(n.text);\n\t\t\t\t\t\t\tif (n instanceof ErrorNode)\n\t\t\t\t\t\t\t\treturn n.toHtml();\n\t\t\t\t\t\t\treturn n.outerHtml;\n\t\t\t\t\t\t}).join('') + '</p>';\n\t\t\t\t\t}\n\t\t\t\t\t// non-paragraphs\n\t\t\t\t\treturn p.outerHtml;\n\t\t\t\t}).join('');\n\t\t\t};\n\t\n\t\t\treturn foo(children, len, this.innerIsText, this.innerText);\n\t\t})();\n\t\n\t\tvar r = render(this, options);\n\t\tthis.outerIsText = r instanceof TextNode;\n\t\tthis.outerText = this.outerIsText ? r.text : null;\n\t\tthis.isError = r instanceof ErrorNode;\n\t\tthis.errorMessage = r instanceof ErrorNode ? r.message : null;\n\t\n\t\tif (this.outerIsText) {\n\t\t\tthis.outerHtml = escapeHtml(this.outerText);\n\t\t} else if (r instanceof HtmlNode) {\n\t\t\tthis.outerHtml = r.html;\n\t\t} else if (r instanceof ErrorNode) {\n\t\t\tthis.outerHtml = r.toHtml();\n\t\t} else {\n\t\t\tthrow TypeError('Render output should be one of TextNode, HtmlNode, or ErrorNode');\n\t\t}\n\t}\n\n\tpublic text(text: string) {\n\t\treturn new TextNode(text);\n\t};\n\t\n\tpublic html(html: string) {\n\t\treturn new HtmlNode({html, display: this.display});\n\t};\n\t\n\tpublic error(message: string) {\n\t\treturn new ErrorNode({\n\t\t\tmessage: `[${this.name}]: ${message}`,\n\t\t\tcode: this.code\n\t\t});\n\t};\n\t\n\tpublic getAttribute(name: string) {\n\t\tfor (var i = 0; i < this.attributes.length; i++) {\n\t\t\tif (this.attributes[i].name == name)\n\t\t\t\treturn this.attributes[i].value;\n\t\t}\n\t\n\t\treturn null;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = [\n\t\t\t'display', 'code', 'attributes', 'split', 'isError', 'errorMessage',\n\t\t\t'innerIsText', 'innerText', 'innerHtml', 'outerIsText', 'outerText',\n\t\t\t'outerHtml'\n\t\t].map(k => k + '='\n\t\t\t+ (typeof this[k] == 'string' || this[k] instanceof Array\n\t\t\t\t? JSON.stringify(this[k])\n\t\t\t\t: this[k] + '')\n\t\t).join('\\n' + '\\t'.repeat(level + 1));\n\t\n\t\tvar b = (function recurse(children, level) {\n\t\t\treturn children.map(c => {\n\t\t\t\tif (c instanceof Array) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'[',\n\t\t\t\t\t\t'\\t' + recurse(c, level + 1),\n\t\t\t\t\t\t']'\n\t\t\t\t\t].join('\\n' + '\\t'.repeat(level));\n\t\t\t\t}\n\n\t\t\t\treturn c.toIndentedString(level);\n\t\t\t}).join(',\\n' + '\\t'.repeat(level));\n\t\t})(this.children, level + 1);\n\t\n\t\treturn `Element[${JSON.stringify(this.name)}](\\n`\n\t\t\t\t+ `${'\\t'.repeat(level + 1)}${a}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}) {\\n`\n\t\t\t+ '\\t'.repeat(level + 1) + `${b}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}}`;\n\t};\n\n\tpublic escapeHtml(s: string) {\n\t\treturn escapeHtml(s);\n\t}\n}","import escapeHtml from \"./escapeHtml\";\nimport Node from \"./Node\";\n\nexport default class ErrorNode extends Node {\n\n\tpublic readonly message: string;\n\tpublic readonly code: string;\n\n\tconstructor ({message, code}) {\n\t\tsuper();\n\n\t\tif (typeof message != 'string')\n\t\t\tthrow TypeError('message not string');\n\n\t\tif (typeof code != 'string')\n\t\t\tthrow TypeError('code not string');\n\n\t\tthis.message = message;\n\t\tthis.code = code;\n\t}\n\n\tpublic toHtml() {\n\t\treturn `<code class=\"m42kup-error\" title=\"Error: ${escapeHtml(this.message)}\">${escapeHtml(this.code)}</code>`;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['message', 'code'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn `Error(${a})`;\n\t};\n}","export default function escapeHtml(s: string) {\n\treturn (s + '').replace(/[&<>\"']/g, m => ({\n\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t\t'\"': '&quot;', '\\'': '&#39;'\n\t})[m]);\n}","import Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class HtmlNode extends Node {\n\n\tpublic readonly html: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\n\tconstructor ({html, display}) {\n\t\tsuper();\n\n\t\tif (typeof html != 'string')\n\t\t\tthrow TypeError('html not string');\n\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\n\t\tthis.html = html;\n\t\tthis.display = display;\n\t}\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['display'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn `Html(${a}) {${JSON.stringify(this.html)}}`;\n\t};\n}","import Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class TextNode extends Node {\n\tpublic readonly text: string;\n\n\tconstructor (text: string) {\n\t\tsuper();\n\n\t\tif (typeof text != 'string')\n\t\t\tthrow TypeError('text not string');\n\n\t\tthis.text = text;\n\t}\n\n\tpublic toIndentedString(level: number) {\n\t\treturn `Text {${JSON.stringify(this.text)}}`;\n\t}\n}","function shallow(o) {\n\tvar o2 = {};\n\n\tfor (var k in o) o2[k] = o[k];\n\n\treturn o2;\n}\n\nfunction copyOptions(o) {\n\tvar o2: any = {};\n\tif (o.tags) o2.tags = shallow(o.tags);\n\tif (o.hljs) o2.hljs = o.hljs;\n\tif (o.katex) o2.katex = o.katex;\n\treturn o2;\n}\n\nfunction tags(o1, o2) {\n\to1 = shallow(o1);\n\t\n\tfor (var k in o2) {\n\t\to1[k] = o2[k];\n\t}\n\n\treturn o1;\n}\n\nfunction options(o1, o2) {\n\tif (typeof o1 != 'object'\n\t\t\t|| typeof o2 != 'object') {\n\t\tthrow TypeError('One of the options provided is not an object');\n\t}\n\n\to1 = copyOptions(o1);\n\t\n\tif (o2.tags) {\n\t\tif (!o1.tags) {\n\t\t\to1.tags = {};\n\t\t}\n\t\t\n\t\to1.tags = tags(o1.tags, o2.tags);\n\t}\n\n\tif (o2.hljs) o1.hljs = o2.hljs;\n\tif (o2.katex) o1.katex = o2.katex;\n\n\treturn o1;\n}\n\nexport default {\n\tcopyOptions,\n\ttags,\n\toptions\n};\n","import parser, { AstRootType } from './parser';\nimport renderer from './renderer';\nimport highlighter from './highlighter';\nimport cascade from './cascade';\nimport addCodeMirrorMode from './codemirror';\n\nvar globalOptions = {};\n\nfunction cascadeOptions(options) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = cascade.options(globalOptions, options);\n}\n\nfunction setOptions(options) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = options;\n}\n\nfunction ast2nt(ast: AstRootType, options) {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\toptions = cascade.options(globalOptions, options);\n\n\tvar nt = renderer.ast2nt(ast, options);\n\n\treturn nt;\n}\n\nfunction render(input, options) {\n\tinput += '';\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\t\n\toptions = cascade.options(globalOptions, options);\n\n\tvar pt = parser.input2pt(input);\n\tvar ast = parser.pt2ast(pt);\n\tvar html = renderer.ast2nt(ast, options).outerHtml;\n\t\n\treturn html;\n}\n\nfunction highlight(input) {\n\tinput += '';\n\n\tvar pt = parser.input2pt(input);\n\tvar hl = highlighter.pt2hl(pt);\n\n\treturn hl;\n}\n\nvar m42kup = {\n\tparser,\n\trenderer,\n\thighlighter,\n\tast2nt,\n\trender,\n\thighlight,\n\tcascade: cascadeOptions,\n\tset: setOptions,\n\taddCodeMirrorMode\n};\n\nmodule.exports = m42kup;\n","import peg from '../dist/peg';\n\nexport interface AstRootType {\n\tinput: string;\n\troot: AstRootTypeInner;\n}\n\nexport interface AstRootTypeInner {\n\ttype: 'root';\n\tchildren: (AstElementType | AstTextType)[];\n\tcode: string;\n}\n\ninterface AstElementType {\n\ttype: 'element';\n\tname: string;\n\tattributes: ({\n\t\tname: string;\n\t\tvalue: string;\n\t})[];\n\tchildren: (AstElementType | AstTextType)[];\n\tcode: string;\n}\n\ninterface AstTextType {\n\ttype: 'text';\n\ttext: string;\n}\n\nexport type AstType = AstRootTypeInner | AstElementType | AstTextType;\n\nfunction input2pt(input) {\n\tvar pt = peg.parse(input);\n\tpt.input = input;\n\t\n\treturn pt;\n}\n\nfunction pt2ast(pt): AstRootType {\n\tvar input = pt.input;\n\n\tvar r = (function recurse(pt) {\n\t\tvar ast = pt.map(e => {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.text\n\t\t\t\t\t};\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.child.text\n\t\t\t\t\t};\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar attributes = e.attributes._type != 'parenthesis'\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: e.attributes.content.filter(({_type}) => _type == 'attribute')\n\t\t\t\t\t\t\t.map(({attribute}) => ({\n\t\t\t\t\t\t\t\tname: attribute[0],\n\t\t\t\t\t\t\t\tvalue: attribute[3]\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'element',\n\t\t\t\t\t\tname: e.name,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tcode: input.substring(e.location.start.offset, e.location.end.offset),\n\t\t\t\t\t\tchildren: recurse(e.children)\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${e.type}`);\n\t\t\t}\n\t\t});\n\n\t\t// join text nodes & remove empty\n\t\tast = ast.reduce((l, r) => {\n\t\t\tif (r.type == 'text') {\n\t\t\t\tif (!r.text) return l;\n\t\t\t\tif (l.length && l[l.length - 1].type == 'text') {\n\t\t\t\t\tl[l.length - 1].text += r.text;\n\t\t\t\t\treturn l;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn l.push(r), l;\n\t\t}, []);\n\n\t\treturn ast;\n\t})(pt.root.children);\n\n\treturn {\n\t\tinput: pt.input,\n\t\troot: {\n\t\t\ttype: 'root',\n\t\t\tchildren: r,\n\t\t\tcode: input\n\t\t}\n\t};\n}\n\nexport default {\n\tinput2pt,\n\tpt2ast\n};","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(children) {\n      \t\treturn {\n      \t\t\troot: {\n      \t\t\t\ttype: 'root',\n      \t\t\t\tchildren,\n      \t\t\t\tlocation: location()\n      \t\t\t}\n      \t\t}\n      \t},\n      peg$c1 = function(lbm, name, attributes, children, rbm) {\n      \t\treturn {\n      \t\t\ttype: 'element',\n      \t\t\tlbm,\n      \t\t\tname,\n      \t\t\tattributes,\n      \t\t\tchildren,\n      \t\t\trbm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c2 = \"[\",\n      peg$c3 = peg$literalExpectation(\"[\", false),\n      peg$c4 = \"<\",\n      peg$c5 = peg$literalExpectation(\"<\", false),\n      peg$c6 = function(a, b) {return (bstack[bstack.length - 1] || 0) <= b.length + 1},\n      peg$c7 = function(a, b) {\n      \t\treturn a + b;\n      \t},\n      peg$c8 = function(a) {\n      \t\tbstack.push(a.length);\n      \t\treturn a;\n      \t},\n      peg$c9 = \"!\",\n      peg$c10 = peg$literalExpectation(\"!\", false),\n      peg$c11 = \"\\\"\",\n      peg$c12 = peg$literalExpectation(\"\\\"\", false),\n      peg$c13 = \"#\",\n      peg$c14 = peg$literalExpectation(\"#\", false),\n      peg$c15 = \"$\",\n      peg$c16 = peg$literalExpectation(\"$\", false),\n      peg$c17 = \"%\",\n      peg$c18 = peg$literalExpectation(\"%\", false),\n      peg$c19 = \"&\",\n      peg$c20 = peg$literalExpectation(\"&\", false),\n      peg$c21 = \"'\",\n      peg$c22 = peg$literalExpectation(\"'\", false),\n      peg$c23 = \")\",\n      peg$c24 = peg$literalExpectation(\")\", false),\n      peg$c25 = \"*\",\n      peg$c26 = peg$literalExpectation(\"*\", false),\n      peg$c27 = \"+\",\n      peg$c28 = peg$literalExpectation(\"+\", false),\n      peg$c29 = \",\",\n      peg$c30 = peg$literalExpectation(\",\", false),\n      peg$c31 = \"-\",\n      peg$c32 = peg$literalExpectation(\"-\", false),\n      peg$c33 = \"/\",\n      peg$c34 = peg$literalExpectation(\"/\", false),\n      peg$c35 = \";\",\n      peg$c36 = peg$literalExpectation(\";\", false),\n      peg$c37 = \"=\",\n      peg$c38 = peg$literalExpectation(\"=\", false),\n      peg$c39 = \">\",\n      peg$c40 = peg$literalExpectation(\">\", false),\n      peg$c41 = \"?\",\n      peg$c42 = peg$literalExpectation(\"?\", false),\n      peg$c43 = \"@\",\n      peg$c44 = peg$literalExpectation(\"@\", false),\n      peg$c45 = \"\\\\\",\n      peg$c46 = peg$literalExpectation(\"\\\\\", false),\n      peg$c47 = \"^\",\n      peg$c48 = peg$literalExpectation(\"^\", false),\n      peg$c49 = \"_\",\n      peg$c50 = peg$literalExpectation(\"_\", false),\n      peg$c51 = \"{\",\n      peg$c52 = peg$literalExpectation(\"{\", false),\n      peg$c53 = \"|\",\n      peg$c54 = peg$literalExpectation(\"|\", false),\n      peg$c55 = \"}\",\n      peg$c56 = peg$literalExpectation(\"}\", false),\n      peg$c57 = \"~\",\n      peg$c58 = peg$literalExpectation(\"~\", false),\n      peg$c59 = /^[a-z]/,\n      peg$c60 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c61 = /^[a-z0-9]/,\n      peg$c62 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c63 = \":\",\n      peg$c64 = peg$literalExpectation(\":\", false),\n      peg$c65 = function(a, b, d, e) {return ':' + d + e.join('')},\n      peg$c66 = function(a, b, c) {\n      \t\treturn a + b + c;\n      \t},\n      peg$c67 = \"\",\n      peg$c68 = \"(\",\n      peg$c69 = peg$literalExpectation(\"(\", false),\n      peg$c70 = /^[a-z0-9\\-]/,\n      peg$c71 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"], \"-\"], false, false),\n      peg$c72 = peg$anyExpectation(),\n      peg$c73 = function(left, name, a, b, c) {return ''},\n      peg$c74 = function(left, name, a, b, c, d) {\n      \t\t\t\t\treturn [a, b, c, d];\n      \t\t\t\t},\n      peg$c75 = /^['\"()[\\] \\t\\n\\r]/,\n      peg$c76 = peg$classExpectation([\"'\", \"\\\"\", \"(\", \")\", \"[\", \"]\", \" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c77 = function(left, name, a, c) {\n      \t\t\t\t\treturn [a, '', c, ''];\n      \t\t\t\t},\n      peg$c78 = function(left, name) {\n      \t\t\t\t\treturn ['', '', '', ''];\n      \t\t\t\t},\n      peg$c79 = function(left, name, value) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'attribute',\n      \t\t\t\t\tattribute: [name].concat(value)\n      \t\t\t\t};\n      \t\t\t},\n      peg$c80 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'whitespace',\n      \t\t\t\t\twhitespace: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c81 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'error',\n      \t\t\t\t\terror: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c82 = function(left, content) {return ''},\n      peg$c83 = function(left, content, right) {\n      \t\treturn {\n      \t\t\t_type: 'parenthesis',\n      \t\t\tleft,\n      \t\t\tcontent,\n      \t\t\tright\n      \t\t}\n      \t},\n      peg$c84 = \".\",\n      peg$c85 = peg$literalExpectation(\".\", false),\n      peg$c86 = function(a) {\n      \t\treturn {\n      \t\t\t_type: 'separator',\n      \t\t\tseparator: a\n      \t\t}\n      \t},\n      peg$c87 = \"]\",\n      peg$c88 = peg$literalExpectation(\"]\", false),\n      peg$c89 = function(a, b) {return (bstack[bstack.length - 1] || 0) == a.length + 1},\n      peg$c90 = function(a, b) {return a + b},\n      peg$c91 = function() {return ''},\n      peg$c92 = function(a) {\n      \t\tbstack.pop();\n      \t\treturn a;\n      \t},\n      peg$c93 = \"`\",\n      peg$c94 = peg$literalExpectation(\"`\", false),\n      peg$c95 = function(b) {return b},\n      peg$c96 = function(a) {\n      \t\treturn {\n      \t\t\ttype: 'text',\n      \t\t\ttext: a.join(''),\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c97 = function(lvm, separator, child, rvm) {\n      \t\treturn {\n      \t\t\ttype: 'verbatim',\n      \t\t\tlvm,\n      \t\t\tseparator,\n      \t\t\tchild,\n      \t\t\trvm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c98 = function(a, b) {\n      \t\tvlevel = b.length + 1;\n      \t\treturn a + b.join('');\n      \t},\n      peg$c99 = function(a, b) {return vlevel == a.length + 1},\n      peg$c100 = function(a, b) {return a.join('') + b},\n      peg$c101 = /^[ \\t\\n\\r]/,\n      peg$c102 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsethings();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsethings() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsething();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsething();\n    }\n\n    return s0;\n  }\n\n  function peg$parsething() {\n    var s0;\n\n    s0 = peg$parseelement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseverbatim();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetext();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseelement() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm_push();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetag_name();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseattributes();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsethings();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parserbm_pop();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c1(s1, s2, s3, s4, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s4 = peg$c4;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s4 = peg$c4;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c6(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm_push() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c8(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetag_name() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s2 = peg$c11;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s2 = peg$c11;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          s1 = [];\n          if (input.charCodeAt(peg$currPos) === 36) {\n            s2 = peg$c15;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              if (input.charCodeAt(peg$currPos) === 36) {\n                s2 = peg$c15;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = [];\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s2 = peg$c17;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s2 !== peg$FAILED) {\n              while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 37) {\n                  s2 = peg$c17;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                }\n              }\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = [];\n              if (input.charCodeAt(peg$currPos) === 38) {\n                s2 = peg$c19;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                  s1.push(s2);\n                  if (input.charCodeAt(peg$currPos) === 38) {\n                    s2 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                }\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = [];\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s2 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s2 !== peg$FAILED) {\n                  while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                      s2 = peg$c21;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                    }\n                  }\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = [];\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s2 = peg$c23;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                  }\n                  if (s2 !== peg$FAILED) {\n                    while (s2 !== peg$FAILED) {\n                      s1.push(s2);\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s2 = peg$c23;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                      }\n                    }\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = [];\n                    if (input.charCodeAt(peg$currPos) === 42) {\n                      s2 = peg$c25;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                    }\n                    if (s2 !== peg$FAILED) {\n                      while (s2 !== peg$FAILED) {\n                        s1.push(s2);\n                        if (input.charCodeAt(peg$currPos) === 42) {\n                          s2 = peg$c25;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                        }\n                      }\n                    } else {\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = [];\n                      if (input.charCodeAt(peg$currPos) === 43) {\n                        s2 = peg$c27;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                      }\n                      if (s2 !== peg$FAILED) {\n                        while (s2 !== peg$FAILED) {\n                          s1.push(s2);\n                          if (input.charCodeAt(peg$currPos) === 43) {\n                            s2 = peg$c27;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                          }\n                        }\n                      } else {\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = [];\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s2 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s2 !== peg$FAILED) {\n                          while (s2 !== peg$FAILED) {\n                            s1.push(s2);\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s2 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                          }\n                        } else {\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = [];\n                          if (input.charCodeAt(peg$currPos) === 45) {\n                            s2 = peg$c31;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                          }\n                          if (s2 !== peg$FAILED) {\n                            while (s2 !== peg$FAILED) {\n                              s1.push(s2);\n                              if (input.charCodeAt(peg$currPos) === 45) {\n                                s2 = peg$c31;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                              }\n                            }\n                          } else {\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = [];\n                            if (input.charCodeAt(peg$currPos) === 47) {\n                              s2 = peg$c33;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                            }\n                            if (s2 !== peg$FAILED) {\n                              while (s2 !== peg$FAILED) {\n                                s1.push(s2);\n                                if (input.charCodeAt(peg$currPos) === 47) {\n                                  s2 = peg$c33;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                                }\n                              }\n                            } else {\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = [];\n                              if (input.charCodeAt(peg$currPos) === 59) {\n                                s2 = peg$c35;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                              }\n                              if (s2 !== peg$FAILED) {\n                                while (s2 !== peg$FAILED) {\n                                  s1.push(s2);\n                                  if (input.charCodeAt(peg$currPos) === 59) {\n                                    s2 = peg$c35;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                                  }\n                                }\n                              } else {\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = [];\n                                if (input.charCodeAt(peg$currPos) === 61) {\n                                  s2 = peg$c37;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  while (s2 !== peg$FAILED) {\n                                    s1.push(s2);\n                                    if (input.charCodeAt(peg$currPos) === 61) {\n                                      s2 = peg$c37;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                    }\n                                  }\n                                } else {\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = [];\n                                  if (input.charCodeAt(peg$currPos) === 62) {\n                                    s2 = peg$c39;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    while (s2 !== peg$FAILED) {\n                                      s1.push(s2);\n                                      if (input.charCodeAt(peg$currPos) === 62) {\n                                        s2 = peg$c39;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                      }\n                                    }\n                                  } else {\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = [];\n                                    if (input.charCodeAt(peg$currPos) === 63) {\n                                      s2 = peg$c41;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      while (s2 !== peg$FAILED) {\n                                        s1.push(s2);\n                                        if (input.charCodeAt(peg$currPos) === 63) {\n                                          s2 = peg$c41;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                        }\n                                      }\n                                    } else {\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = [];\n                                      if (input.charCodeAt(peg$currPos) === 64) {\n                                        s2 = peg$c43;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        while (s2 !== peg$FAILED) {\n                                          s1.push(s2);\n                                          if (input.charCodeAt(peg$currPos) === 64) {\n                                            s2 = peg$c43;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                          }\n                                        }\n                                      } else {\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = [];\n                                        if (input.charCodeAt(peg$currPos) === 92) {\n                                          s2 = peg$c45;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          while (s2 !== peg$FAILED) {\n                                            s1.push(s2);\n                                            if (input.charCodeAt(peg$currPos) === 92) {\n                                              s2 = peg$c45;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                            }\n                                          }\n                                        } else {\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = [];\n                                          if (input.charCodeAt(peg$currPos) === 94) {\n                                            s2 = peg$c47;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            while (s2 !== peg$FAILED) {\n                                              s1.push(s2);\n                                              if (input.charCodeAt(peg$currPos) === 94) {\n                                                s2 = peg$c47;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                              }\n                                            }\n                                          } else {\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = [];\n                                            if (input.charCodeAt(peg$currPos) === 95) {\n                                              s2 = peg$c49;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              while (s2 !== peg$FAILED) {\n                                                s1.push(s2);\n                                                if (input.charCodeAt(peg$currPos) === 95) {\n                                                  s2 = peg$c49;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                                }\n                                              }\n                                            } else {\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = [];\n                                              if (input.charCodeAt(peg$currPos) === 123) {\n                                                s2 = peg$c51;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                while (s2 !== peg$FAILED) {\n                                                  s1.push(s2);\n                                                  if (input.charCodeAt(peg$currPos) === 123) {\n                                                    s2 = peg$c51;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                                  }\n                                                }\n                                              } else {\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = [];\n                                                if (input.charCodeAt(peg$currPos) === 124) {\n                                                  s2 = peg$c53;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  while (s2 !== peg$FAILED) {\n                                                    s1.push(s2);\n                                                    if (input.charCodeAt(peg$currPos) === 124) {\n                                                      s2 = peg$c53;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                    }\n                                                  }\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = [];\n                                                  if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s2 = peg$c55;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    while (s2 !== peg$FAILED) {\n                                                      s1.push(s2);\n                                                      if (input.charCodeAt(peg$currPos) === 125) {\n                                                        s2 = peg$c55;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                      }\n                                                    }\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = [];\n                                                    if (input.charCodeAt(peg$currPos) === 126) {\n                                                      s2 = peg$c57;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      while (s2 !== peg$FAILED) {\n                                                        s1.push(s2);\n                                                        if (input.charCodeAt(peg$currPos) === 126) {\n                                                          s2 = peg$c57;\n                                                          peg$currPos++;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                        }\n                                                      }\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c59.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c61.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c62); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s6 = peg$c63;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (peg$c59.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = [];\n              if (peg$c61.test(input.charAt(peg$currPos))) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c62); }\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c65(s1, s2, s7, s8);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s6 = peg$c63;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (peg$c59.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (peg$c61.test(input.charAt(peg$currPos))) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c65(s1, s2, s7, s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = input.substring(s3, peg$currPos);\n          } else {\n            s3 = s4;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c66(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$c67;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattributes() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c68;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      s5 = [];\n      if (peg$c70.test(input.charAt(peg$currPos))) {\n        s6 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s6 !== peg$FAILED) {\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c70.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c71); }\n          }\n        }\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s4 = input.substring(s4, peg$currPos);\n      } else {\n        s4 = s5;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s6 = peg$c37;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s7 = peg$c11;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            s9 = [];\n            s10 = peg$currPos;\n            s11 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s12 = peg$c11;\n              peg$currPos++;\n            } else {\n              s12 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            peg$silentFails--;\n            if (s12 === peg$FAILED) {\n              s11 = void 0;\n            } else {\n              peg$currPos = s11;\n              s11 = peg$FAILED;\n            }\n            if (s11 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s12 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s12 !== peg$FAILED) {\n                s11 = [s11, s12];\n                s10 = s11;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s10;\n              s10 = peg$FAILED;\n            }\n            while (s10 !== peg$FAILED) {\n              s9.push(s10);\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            }\n            if (s9 !== peg$FAILED) {\n              s8 = input.substring(s8, peg$currPos);\n            } else {\n              s8 = s9;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s9 = peg$c11;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              if (s9 === peg$FAILED) {\n                s9 = peg$currPos;\n                s10 = peg$parseEOF();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s9;\n                  s10 = peg$c73(s1, s4, s6, s7, s8);\n                }\n                s9 = s10;\n              }\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s7 = peg$c21;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c22); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s12 = peg$c21;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s9 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$currPos;\n              s10 = peg$currPos;\n              peg$silentFails++;\n              if (peg$c75.test(input.charAt(peg$currPos))) {\n                s11 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s11 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c76); }\n              }\n              peg$silentFails--;\n              if (s11 === peg$FAILED) {\n                s10 = void 0;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              if (s10 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s10 = [s10, s11];\n                  s9 = s10;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s9;\n                s9 = peg$FAILED;\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                s7 = input.substring(s7, peg$currPos);\n              } else {\n                s7 = s8;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c77(s1, s4, s6, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$c67;\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c78(s1, s4);\n              }\n              s5 = s6;\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c79(s1, s4, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c80(s1, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c23;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$currPos;\n            peg$silentFails++;\n            s8 = peg$parserbm();\n            peg$silentFails--;\n            if (s8 === peg$FAILED) {\n              s7 = void 0;\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s8 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s8 !== peg$FAILED) {\n                s6 = [s6, s7, s8];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = input.substring(s4, peg$currPos);\n          } else {\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c81(s1, s4);\n          }\n          s3 = s4;\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        s5 = [];\n        if (peg$c70.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s6 !== peg$FAILED) {\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c70.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n          }\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = input.substring(s4, peg$currPos);\n        } else {\n          s4 = s5;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s7 = peg$c11;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s12 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s9 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s7 = peg$c21;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                s9 = [];\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  s11 = peg$currPos;\n                  peg$silentFails++;\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s12 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  peg$silentFails--;\n                  if (s12 === peg$FAILED) {\n                    s11 = void 0;\n                  } else {\n                    peg$currPos = s11;\n                    s11 = peg$FAILED;\n                  }\n                  if (s11 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s12 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s12 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s12 !== peg$FAILED) {\n                      s11 = [s11, s12];\n                      s10 = s11;\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  s8 = input.substring(s8, peg$currPos);\n                } else {\n                  s8 = s9;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s9 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseEOF();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s9;\n                      s10 = peg$c73(s1, s4, s6, s7, s8);\n                    }\n                    s9 = s10;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s6 = peg$c37;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$currPos;\n                  s10 = peg$currPos;\n                  peg$silentFails++;\n                  if (peg$c75.test(input.charAt(peg$currPos))) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                  }\n                  peg$silentFails--;\n                  if (s11 === peg$FAILED) {\n                    s10 = void 0;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                  if (s10 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s11 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s11 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s10 = [s10, s11];\n                      s9 = s10;\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = input.substring(s7, peg$currPos);\n                } else {\n                  s7 = s8;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c77(s1, s4, s6, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$c67;\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c78(s1, s4);\n                }\n                s5 = s6;\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c79(s1, s4, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c80(s1, s4);\n          }\n          s3 = s4;\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s7 = peg$c23;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserbm();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s6 = [s6, s7, s8];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = input.substring(s4, peg$currPos);\n            } else {\n              s4 = s5;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c81(s1, s4);\n            }\n            s3 = s4;\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c23;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c82(s1, s2);\n          }\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c83(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c84;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c85); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c67;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c86(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s3 = peg$c39;\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s3 = peg$c39;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s2 = peg$c87;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c89(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c90(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm_pop() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parserbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c92(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetext() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parselbm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parserbm();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s6 = peg$c93;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c94); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c95(s6);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parselbm();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 96) {\n              s6 = peg$c93;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c94); }\n            }\n            peg$silentFails--;\n            if (s6 === peg$FAILED) {\n              s5 = void 0;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c95(s6);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseverbatim() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parselvm();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseverbatim_separator();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseverbatim_text();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parservm();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c97(s1, s2, s3, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselvm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c93;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s3 = peg$c4;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s3 = peg$c4;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c98(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_separator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c84;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c85); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$c67;\n    }\n\n    return s0;\n  }\n\n  function peg$parservm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s2 = peg$c39;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s2 = peg$c39;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 96) {\n        s2 = peg$c93;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c99(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c100(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_text() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parservm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$c95(s4);\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parservm();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = void 0;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c95(s4);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$c101.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c101.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c102); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n\n  \tvar bstack = [], vlevel;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import defaultTagNameMap from './elements/default';\nimport cascade from '../cascade';\nimport Element from './nodes/Element';\nimport ElementClass from './nodes/ElementClass';\nimport Node from './nodes/Node';\nimport ErrorNode from './nodes/ErrorNode';\nimport TextNode from './nodes/TextNode';\nimport HtmlNode from './nodes/HtmlNode';\nimport { AstRootType, AstType } from '../parser';\n\nvar rootClass = new ElementClass({\n\tname: '[root]',\n\tdisplay: 'container-block',\n\trender: el => el.html(el.innerHtml)\n});\n\nfunction ast2nt(ast: AstRootType, options): Element {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\tvar tagNameMap = cascade.tags(defaultTagNameMap, options.tags);\n\t\n\treturn (function recurse(tree: AstType): Node {\n\t\tif (tree.type == 'root') {\n\t\t\treturn rootClass.instantiate({\n\t\t\t\tcode: tree.code,\n\t\t\t\tattributes: [],\n\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\toptions\n\t\t\t});\n\t\t}\n\t\tif (tree.type == 'text') {\n\t\t\treturn new TextNode(tree.text);\n\t\t}\n\t\t\n\t\t// @ts-ignore\n\t\tif (tree.type == 'error') {\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: 'Parser error',\n\t\t\t\t// @ts-ignore\n\t\t\t\tcode: tree.text\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tree.type == 'element') {\n\t\t\tif (tree.name in tagNameMap && tagNameMap[tree.name]) {\n\t\t\t\tif (tagNameMap[tree.name].split) {\n\t\t\t\t\tvar recurseSplit = (list, split) => {\n\t\t\t\t\t\tif (split.length == 0)\n\t\t\t\t\t\t\treturn list.map(recurse);\n\n\t\t\t\t\t\tvar s = split[split.length - 1];\n\n\t\t\t\t\t\tvar a = [], b;\n\n\t\t\t\t\t\t// find delimiters\n\t\t\t\t\t\tlist = list.map(l => {\n\t\t\t\t\t\t\tif (l.type == 'element' && l.name == s\n\t\t\t\t\t\t\t\t\t&& !l.children.length) {\n\t\t\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn l;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// trim left\n\t\t\t\t\t\tif (list.length && list[0].type == 'text'\n\t\t\t\t\t\t\t\t&& !list[0].text.trim()) {\n\t\t\t\t\t\t\tlist = list.slice(1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add omitted delimiter\n\t\t\t\t\t\tif (!(list.length && list[0].type == 'delimiter')) {\n\t\t\t\t\t\t\tlist.unshift({\n\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\t\t\tif (list[i].type == 'delimiter') {\n\t\t\t\t\t\t\t\tif (b) a.push(b);\n\t\t\t\t\t\t\t\tb = [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tb.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ta.push(b);\n\n\t\t\t\t\t\treturn a.map(e => recurseSplit(e, split.slice(0, -1)));\n\t\t\t\t\t};\n\n\t\t\t\t\treturn tagNameMap[tree.name].instantiate({\n\t\t\t\t\t\tcode: tree.code,\n\t\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\t\tchildren: recurseSplit(\n\t\t\t\t\t\t\ttree.children,\n\t\t\t\t\t\t\ttagNameMap[tree.name].split\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn tagNameMap[tree.name].instantiate({\n\t\t\t\t\tcode: tree.code,\n\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\t\toptions\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: tree.name ? `Undefined tag name [${tree.name}]` : 'No tag name',\n\t\t\t\tcode: tree.code\n\t\t\t});\n\t\t}\n\n\t\t// @ts-ignore\n\t\tthrow TypeError(tree.type);\n\t})(ast.root) as Element;\n}\n\nexport default {\n\tast2nt,\n\tNode,\n\tTextNode,\n\tHtmlNode,\n\tErrorNode,\n\tElementClass,\n\tElement\n};\n","import ElementClass from \"../nodes/ElementClass\";\n\nvar tagNameMap: any = {};\n\ntagNameMap.comment = new ElementClass({\n\tname: 'comment',\n\tdisplay: 'inline',\n\trender: el => el.text('')\n});\n\ntagNameMap.entity = new ElementClass({\n\tname: 'entity',\n\tdisplay: 'inline',\n\trender: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tif(!/^([a-z]{1,50}|#[0-9]{1,10}|#x[0-9a-f]{1,10})$/i.test(el.innerText))\n\t\t\treturn el.error('Invalid value');\n\n\t\treturn el.html(`&${el.innerText};`);\n\t}\n});\n\n[\n\t'b', 'code', 'i', 'u', 'sup', 'sub'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname: name,\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\n[\n\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname: name,\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\ntagNameMap['blockquote'] = new ElementClass({\n\tname: 'blockquote',\n\tdisplay: 'container-block',\n\trender: el => {\n\t\tvar type = el.getAttribute('type');\n\n\t\tif (['info', 'warn'].includes(type))\n\t\t\treturn el.html(`<blockquote class=\"m42kup-bq-${type}\">${el.innerHtml}</blockquote>`);\n\n\t\treturn el.html(`<blockquote>${el.innerHtml}</blockquote>`);\n\t}\n});\n\n[\n\t'br'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n[\n\t'hr'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n['ul', 'ol'].forEach(name => {\n\ttagNameMap[name] = new ElementClass({\n\t\tname,\n\t\tdisplay: 'container-block',\n\t\tsplit: '*',\n\t\trender: el => {\n\t\t\treturn el.html(`<${name}>`\n\t\t\t\t+ el.innerHtml.map(h => `<li>${h}</li>`).join('')\n\t\t\t\t+ `</${name}>`);\n\t\t}\n\t});\n});\n\ntagNameMap.table = new ElementClass({\n\tname: 'table',\n\tdisplay: 'container-block',\n\tsplit: ['*', '**'],\n\trender: el => {\n\t\tvar n = el.innerHtml.map(e => e.length).reduce((l, r) => l < r ? r : l);\n\n\t\treturn el.html('<table>'\n\t\t\t+ el.innerHtml.map(hh => `<tr>${\n\t\t\t\thh.concat(Array(n - hh.length).fill(''))\n\t\t\t\t\t.map(h => `<td>${h}</td>`).join('')\n\t\t\t}</tr>`).join('')\n\t\t\t+ '</table>');\n\t}\n});\n\ntagNameMap.blockcode = new ElementClass({\n\tname: 'blockcode',\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\tvar trimmed = el.innerHtml.replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\t\treturn el.html(`<pre><code>${trimmed}\\n</code></pre>`);\n\t}\n});\n\ntagNameMap.bi = new ElementClass({\n\tname: 'bi',\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<i><b>${el.innerHtml}</b></i>`);\n\t}\n});\n\nfunction normalizeUrl(url) {\n\turl = url.trim();\n\n\t// fragment\n\tif (/^#/.test(url)) {\n\t\tif (/^#[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\t// relative URL\n\tif (/^(\\/|\\.\\/|\\.\\.\\/)/.test(url)) {\n\t\tif (/^(\\/|\\.\\/|\\.\\.\\/)[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\tif (!/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)/.test(url))\n\t\turl = 'http://' + url;\n\n\t// see issue #17\n\tif (/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)[a-z0-9]+(-+[a-z0-9]+)*(\\.[a-z0-9]+(-+[a-z0-9]+)*)+\\.?(:[0-9]{1,5})?(\\/[^\\s]*)?$/.test(url)) {\n\t\treturn url;\n\t} else return false;\n}\n\ntagNameMap.link = new ElementClass({\n\tname: 'link',\n\tdisplay: 'inline',\n\trender: el => {\n\t\tvar href = el.getAttribute('href');\n\n\t\tif (href == null) {\n\t\t\tif (!el.innerIsText)\n\t\t\t\treturn el.error('Non-text input');\n\n\t\t\tlet url = normalizeUrl(el.innerText);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${htmlUrl}</a>`);\n\t\t} else {\n\t\t\tlet url = normalizeUrl(href);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${el.innerHtml}</a>`);\n\t\t}\n\t}\n});\n\ntagNameMap.img = new ElementClass({\n\tname: 'img',\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar url = normalizeUrl(el.innerText);\n\t\tif (!url) return el.error('Invalid URL');\n\n\t\tvar htmlUrl = el.escapeHtml(url);\n\t\treturn el.html(`<img src=\"${htmlUrl}\">`);\n\t}\n});\n\n[\n\t'squote', 'dquote'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'inline',\n\trender: el => {\n\t\tvar quotes = {\n\t\t\tsquote: {\n\t\t\t\tnormal: ['\\u2018', '\\u2019'],\n\t\t\t\tangle: ['\\u3008', '\\u3009'],\n\t\t\t\tcorner: ['\\u300c', '\\u300d']\n\t\t\t},\n\t\t\tdquote: {\n\t\t\t\tnormal: ['\\u201c', '\\u201d'],\n\t\t\t\tangle: ['\\u300a', '\\u300b'],\n\t\t\t\tcorner: ['\\u300e', '\\u300f']\n\t\t\t}\n\t\t};\n\n\t\tvar type = el.getAttribute('type');\n\t\tif (!['angle', 'corner'].includes(type))\n\t\t\ttype = 'normal';\n\n\t\treturn el.html(`${quotes[name][type][0]}${el.innerHtml}${quotes[name][type][1]}`);\n\t}\n}));\n\ntagNameMap.highlight = new ElementClass({\n\tname: 'highlight',\n\tdisplay: 'leaf-block',\n\trender: (el, options) => {\n\t\tif (!options.hljs)\n\t\t\treturn el.error('Element not implemented (options.highlight not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar commonLangs = [\n\t\t\t'apache', 'bash', 'coffeescript', 'cpp', 'cs',\n\t\t\t'css', 'diff', 'http', 'ini', 'java',\n\t\t\t'javascript', 'json', 'makefile', 'xml', 'markdown',\n\t\t\t'nginx', 'objectivec', 'perl', 'php', 'python',\n\t\t\t'ruby', 'sql'\n\t\t];\n\n\t\tvar trimmed = el.innerText.replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\n\t\tvar highlighted;\n\n\t\tif (commonLangs.includes(el.getAttribute('lang'))) {\n\t\t\tvar lang = el.getAttribute('lang');\n\t\t\thighlighted = options.hljs.highlight(lang, trimmed).value;\n\t\t} else {\n\t\t\thighlighted = options.hljs.highlightAuto(trimmed, commonLangs).value;\n\t\t}\n\n\t\treturn el.html(`<pre class=\"hljs\"><code>${highlighted}\\n</code></pre>`);\n\t}\n});\n \ntagNameMap.math = new ElementClass({\n\tname: 'math',\n\tdisplay: 'inline',\n\trender: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: false,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\ntagNameMap.displaymath = new ElementClass({\n\tname: 'displaymath',\n\tdisplay: 'leaf-block',\n\trender: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: true,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\n// tag name aliases ordered by char code\nvar aliases = {\n\t'\"': 'dquote',\n\t'$': 'math',\n\t'$$': 'displaymath',\n\t'%': 'comment',\n\t'&': 'entity',\n\t'\\'': 'squote',\n\t'*': 'i',\n\t'**': 'b',\n\t'***': 'bi',\n\t';': 'code',\n\t';;': 'blockcode',\n\t';;;': 'highlight',\n\t'=': 'h1',\n\t'==': 'h2',\n\t'===': 'h3',\n\t'====': 'h4',\n\t'=====': 'h5',\n\t'======': 'h6',\n\t'>': 'blockquote',\n\t'\\\\': 'br',\n\t'^': 'sup',\n\t'_': 'sub',\n\t'~': 'link',\n\t'~~': 'img'\n};\n\nfor (var k in aliases) {\n\tif (!tagNameMap[aliases[k]]) {\n\t\tthrow TypeError('aliasing failed');\n\t}\n\ttagNameMap[k] = tagNameMap[aliases[k]];\n}\n\nexport default tagNameMap;","var escapeHtml = s => (s + '').replace(/[&<>\"']/g, m => ({\n\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t'\"': '&quot;', '\\'': '&#39;'\n})[m]);\n\nfunction makeHtml(fragment) {\n\treturn `<span class=\"m42hl-${fragment.type}\">${fragment.html || escapeHtml(fragment.text)}</span>`;\n}\n\nfunction pt2hl(pt) {\n\treturn (function recurse(pt) {\n\t\tvar ret = '';\n\n\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\tswitch(pt[i].type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].text\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar tmp = makeHtml({\n\t\t\t\t\t\ttype: 'lbm',\n\t\t\t\t\t\ttext: pt[i].lbm\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tn',\n\t\t\t\t\t\ttext: pt[i].name\n\t\t\t\t\t})\n\t\t\t\t\t\t+ (p => {\n\t\t\t\t\t\tswitch (p._type) {\n\t\t\t\t\t\t\tcase 'parenthesis':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'lpm',\n\t\t\t\t\t\t\t\t\ttext: p.left\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t+ p.content.map(q => {\n\t\t\t\t\t\t\t\t\tswitch (q._type) {\n\t\t\t\t\t\t\t\t\t\tcase 'attribute':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pk',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[0]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'eq',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[1]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'lqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[2]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pv',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[3]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'rqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[4]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'whitespace':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.whitespace\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'err',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.error\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).join('')\n\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'rpm',\n\t\t\t\t\t\t\t\t\ttext: p.right\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcase 'separator':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'sp',\n\t\t\t\t\t\t\t\t\ttext: p.separator\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t}\n\t\t\t\t\t})(pt[i].attributes)\n\t\t\t\t\t\t+ recurse(pt[i].children)\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rbm',\n\t\t\t\t\t\ttext: pt[i].rbm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'elem',\n\t\t\t\t\t\thtml: tmp\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\tvar tmp2 = makeHtml({\n\t\t\t\t\t\ttype: 'lvm',\n\t\t\t\t\t\ttext: pt[i].lvm + pt[i].separator\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].child.text\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rvm',\n\t\t\t\t\t\ttext: pt[i].rvm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'verb',\n\t\t\t\t\t\thtml: tmp2\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${pt[i].type}`);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t})(pt.root.children);\n}\n\nexport default {\n\tpt2hl\n};","var STATE_NORMAL = 0,\n\tSTATE_ATTRIBUTE_NAME = 1,\n\tSTATE_ATTRIBUTE_EQ = 2,\n\tSTATE_ATTRIBUTE_VALUE = 3,\n\tSTATE_ATTRIBUTE_DQUOTE = 4,\n\tSTATE_ATTRIBUTE_SQUOTE = 5;\n\nexport default function addCodeMirrorMode(CodeMirror) {\n\tfunction token(stream, state) {\n\t\tif ((state.levels[state.levels.length - 1] || 0) < 0) {\n\t\t\tvar lvmLevel = -state.levels[state.levels.length - 1];\n\t\t\tvar rvmString = '>'.repeat(lvmLevel - 1) + '`';\n\t\t\tif (stream.skipTo(rvmString)) {\n\t\t\t\tstream.match(rvmString);\n\t\t\t\tstate.levels.pop();\n\t\t\t} else stream.skipToEnd();\n\n\t\t\treturn 'comment';\n\t\t}\n\n\t\tvar c = stream.peek();\n\n\t\tif (![STATE_ATTRIBUTE_DQUOTE, STATE_ATTRIBUTE_SQUOTE].includes(state.status)\n\t\t\t\t&& ['>', ']'].includes(c)) {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel > 0) {\n\t\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\t\tif (stream.match(rbmString)) {\n\t\t\t\t\tstate.levels.pop();\n\t\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\t\treturn 'tag';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (state.status != STATE_NORMAL) {\n\t\t\tif (stream.match(')')) {\n\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\treturn 'tag';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_NAME) {\n\t\t\t\tif (stream.match(/^[a-z0-9-]+/)) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_EQ;\n\t\t\t\t\treturn 'attribute';\n\t\t\t\t} else if (stream.match(/^[ \\t\\n\\r]+/)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn 'error';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_EQ) {\n\t\t\t\tif (stream.match('=')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_VALUE;\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_VALUE) {\n\t\t\t\tif (stream.match('\"')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_DQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tif (stream.match(\"'\")) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_SQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tstream.match(/^[^'\"()\\[\\] \\t\\n\\r]*/);\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_DQUOTE) {\n\t\t\t\tif (stream.skipTo('\"')) {\n\t\t\t\t\tstream.match('\"');\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_SQUOTE) {\n\t\t\t\tif (stream.skipTo(\"'\")) {\n\t\t\t\t\tstream.match(\"'\");\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\t\t}\n\n\t\tif (c == '`') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tstate.levels.push(-level);\n\n\t\t\treturn 'comment';\n\t\t} else if (c == '[') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tvar currentLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (level < currentLevel) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar tagNameRegex = /^(?:\\!+|\\\"+|\\#+|\\$+|\\%+|\\&+|\\'+|\\)+|\\*+|\\++|\\,+|\\-+|\\/+|\\;+|\\=+|\\>+|\\?+|\\@+|\\\\+|\\^+|\\_+|\\{+|\\|+|\\}+|\\~+|[a-z][a-z0-9]*(?:\\:[a-z][a-z0-9]*)*|)/;\n\n\t\t\tstream.match(tagNameRegex);\n\n\t\t\tif (stream.match('(')) {\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t} else {\n\t\t\t\tvar separatorRegex = /^(?:[.]|)/i;\n\t\t\t\tstream.match(separatorRegex);\n\t\t\t}\n\n\t\t\tstate.levels.push(level);\n\n\t\t\treturn 'tag';\n\t\t} else if (c == '>' || c == ']') {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel <= 0) {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\tif (stream.match(rbmString)) {\n\t\t\t\tstate.levels.pop();\n\t\t\t\treturn 'tag';\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}  else /* none of '[', ']', '`', '>' */ {\n\t\t\t// reduce text normalization overhead\n\t\t\tstream.match(/^[^\\[\\]`>]+/);\n\t\t}\n\t}\n\n\tCodeMirror.defineMode('m42kup', (config, parserConfig) => ({\n\t\tstartState(baseColumn) {\n\t\t\treturn {\n\t\t\t\tlevels: [],\n\t\t\t\tstatus: STATE_NORMAL\n\t\t\t}\n\t\t},\n\t\ttoken\n\t}));\n};"],"sourceRoot":""}