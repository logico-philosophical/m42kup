{"version":3,"sources":["webpack://m42kup/webpack/universalModuleDefinition","webpack://m42kup/webpack/bootstrap","webpack://m42kup/./src/renderer/nodes/Node.ts","webpack://m42kup/./src/renderer/nodes/ElementClass.ts","webpack://m42kup/./src/renderer/nodes/Element.ts","webpack://m42kup/./src/renderer/nodes/ErrorNode.ts","webpack://m42kup/./src/renderer/nodes/escapeHtml.ts","webpack://m42kup/./src/renderer/nodes/HtmlNode.ts","webpack://m42kup/./src/renderer/nodes/TextNode.ts","webpack://m42kup/./src/cascade.ts","webpack://m42kup/./src/entry.ts","webpack://m42kup/./src/parser.ts","webpack://m42kup/./dist/peg.js","webpack://m42kup/./src/renderer/index.ts","webpack://m42kup/./src/renderer/elements/default.ts","webpack://m42kup/./src/highlighter.ts","webpack://m42kup/./src/codemirror.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toIndentedString","ElementClass","display","render","split","TypeError","includes","Function","el","options","Array","length","code","attributes","children","Error","Element","super","foo","every","len","innerIsText","li","le","map","outerIsText","e","innerText","iit","text","outerText","join","innerHtml","it","trim","filter","toHtml","outerHtml","paragraphs","commit","push","add","forEach","isError","errorMessage","message","html","level","a","k","JSON","stringify","repeat","b","ErrorNode","replace","'","HtmlNode","TextNode","shallow","o2","copyOptions","tags","hljs","katex","o1","globalOptions","m42kup","parser","renderer","highlighter","ast2nt","ast","input","pt","input2pt","pt2ast","highlight","pt2hl","cascade","set","addCodeMirrorMode","parse","recurse","type","child","_type","content","attribute","substring","location","start","offset","end","reduce","peg$SyntaxError","expected","found","captureStackTrace","parent","ctor","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","j","descriptions","sort","slice","describeExpected","describeFound","SyntaxError","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c5","peg$c10","peg$c12","peg$c14","peg$c16","peg$c18","peg$c20","peg$c22","peg$c24","peg$c26","peg$c28","peg$c30","peg$c32","peg$c34","peg$c36","peg$c38","peg$c40","peg$c42","peg$c44","peg$c46","peg$c48","peg$c50","peg$c52","peg$c54","peg$c56","peg$c58","peg$c59","peg$c60","peg$classExpectation","peg$c61","peg$c62","peg$c64","peg$c65","peg$c69","peg$c70","peg$c71","peg$c72","peg$c74","left","peg$c75","peg$c76","peg$c77","peg$c79","concat","peg$c80","whitespace","peg$c81","error","peg$c85","peg$c88","peg$c94","peg$c96","peg$c101","peg$c102","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildStructuredError","s0","s1","peg$parsethings","peg$parsething","s2","s3","s4","s5","peg$parselbm","bstack","peg$parselbm_push","s6","s7","s8","s9","test","charAt","peg$parsetag_name","s10","s11","s12","peg$parseEOF","peg$parse__","peg$parserbm","right","separator","peg$parseattributes","pop","peg$parserbm_pop","lbm","rbm","peg$parseelement","vlevel","peg$parselvm","peg$parseverbatim_separator","peg$parservm","peg$parseverbatim_text","lvm","rvm","peg$parseverbatim","peg$parsetext","peg$c7","peg$c90","peg$c100","rootClass","tagNameMap","default","tree","instantiate","recurseSplit","list","unshift","Node","normalizeUrl","url","comment","entity","getAttribute","h","table","hh","fill","blockcode","trimmed","bi","link","href","htmlUrl","escapeHtml","img","quotes","squote","normal","angle","corner","dquote","highlighted","commonLangs","lang","highlightAuto","math","rendered","renderToString","throwOnError","displayMode","strict","displaymath","aliases","makeHtml","fragment","ret","tmp","q","tmp2","STATE_ATTRIBUTE_DQUOTE","STATE_ATTRIBUTE_SQUOTE","CodeMirror","token","stream","state","levels","lvmLevel","rvmString","skipTo","match","skipToEnd","peek","status","lbmLevel","rbmString","next","backUp","defineMode","config","parserConfig","startState","baseColumn"],"mappings":"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","file":"m42kup.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"m42kup\"] = factory();\n\telse\n\t\troot[\"m42kup\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","export default abstract class Node {\n\n\tpublic toString() {\n\t\treturn this.toIndentedString(0);\n\t};\n\n\tpublic abstract toIndentedString(level: number): string;\n}","import Element from \"./Element\";\n\ninterface ElementClassArgumentType {\n\tname: NonNullable<string>;\n\tdisplay: 'inline' | 'leaf-block' | 'container-block';\n\trender: Function;\n\tsplit?: string | any[];\n}\n\nexport default class ElementClass {\n\n\tpublic readonly name: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\tpublic readonly render: Function;\n\tpublic readonly split: string | any[];\n\n\tconstructor ({name, display, render, split}: ElementClassArgumentType) {\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(render instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\n\t\t[this.name, this.display] = [name, display];\n\n\t\tthis.render = (el, options) => {\n\t\t\tif (!(el instanceof Element))\n\t\t\t\tthrow TypeError('arg0 should be an instance of m42kup.renderer.Element');\n\t\t\treturn render(el, options);\n\t\t};\n\n\t\tif (typeof split != 'undefined') {\n\t\t\tif (typeof split == 'string') split = [split];\n\n\t\t\tif (!(split instanceof Array))\n\t\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\n\t\t\tif (!split.length)\n\t\t\t\tthrow TypeError('arg0.split.length == 0');\n\n\t\t\tthis.split = split;\n\t\t}\n\t}\n\n\tpublic instantiate({code, attributes, children, options}) {\n\t\tif (!(this instanceof ElementClass)) {\n\t\t\tthrow Error('ElementClass.prototype.instantiate should be called as a method of an ElementClass instance');\n\t\t}\n\t\n\t\treturn new Element({\n\t\t\tname: this.name,\n\t\t\tdisplay: this.display,\n\t\t\trender: this.render,\n\t\t\tcode,\n\t\t\tattributes,\n\t\t\tchildren,\n\t\t\tsplit: this.split,\n\t\t\toptions\n\t\t});\n\t};\n}","import ErrorNode from \"./ErrorNode\";\nimport escapeHtml from \"./escapeHtml\";\nimport HtmlNode from \"./HtmlNode\";\nimport Node from \"./Node\";\nimport TextNode from \"./TextNode\";\n\nexport default class Element extends Node {\n\n\tpublic readonly name: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\tpublic readonly code: string;\n\tpublic readonly attributes: any[];\n\tpublic readonly children: any[];\n\tpublic readonly split: string | any[];\n\tpublic readonly innerIsText: boolean;\n\tpublic readonly innerText: string;\n\tpublic readonly innerHtml: string;\n\tpublic readonly outerIsText: boolean;\n\tpublic readonly outerText: string;\n\tpublic readonly isError: boolean;\n\tpublic readonly errorMessage: string;\n\tpublic readonly outerHtml: string;\n\n\tconstructor ({name, display, render, code, attributes, children, split, options}) {\n\t\tsuper();\n\n\t\tif (!name) throw TypeError('You give arg0 a bad name');\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\t\tif (!(render instanceof Function))\n\t\t\tthrow TypeError('arg0.render should be a function');\n\t\tif (typeof code != 'string') throw TypeError('You give arg0 a bad code');\n\t\tif (!(attributes instanceof Array)) throw TypeError('attributes should be an array');\n\t\n\t\t(() => {\n\t\t\tvar foo = c => c instanceof Element\n\t\t\t\t|| c instanceof TextNode\n\t\t\t\t|| c instanceof ErrorNode\n\t\t\t\t|| ((c instanceof Array) && c.every(foo));\n\t\n\t\t\tif (!children.every(foo))\n\t\t\t\tthrow TypeError('All arg0.children should either be an Element, a TextNode, or an ErrorNode');\n\t\t})();\n\t\n\t\tif (typeof split != 'undefined') {\n\t\t\tif (typeof split == 'string') split = [split];\n\t\n\t\t\tif (!(split instanceof Array))\n\t\t\t\tthrow TypeError('arg0.split should be either undefined, a string, or an array');\n\t\n\t\t\tif (!split.length)\n\t\t\t\tthrow TypeError('arg0.split.length == 0');\n\t\n\t\t\tthis.split = split;\n\t\t}\n\t\n\t\t[this.name, this.display, this.code, this.attributes, this.children]\n\t\t\t= [name, display, code, attributes, children];\n\t\n\t\tthis.innerIsText = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map(l => foo(l, le - 1));\n\t\t\t\t\n\t\t\t\treturn li.map(c => {\n\t\t\t\t\tif (c instanceof TextNode) return true;\n\t\t\t\t\tif (c instanceof ErrorNode) return false;\n\t\t\t\t\treturn c.outerIsText;\n\t\t\t\t}).every(e => e);\n\t\t\t};\n\t\n\t\t\treturn foo(children, len);\n\t\t})();\n\t\n\t\tthis.innerText = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i]));\n\t\t\t\t\n\t\t\t\treturn iit\n\t\t\t\t\t? li.map((c: any) => {\n\t\t\t\t\t\tif (c instanceof TextNode) return c.text;\n\t\t\t\t\t\treturn c.outerText;\n\t\t\t\t\t}).join('')\n\t\t\t\t\t: null;\n\t\t\t};\n\t\n\t\t\treturn foo(children, len, this.innerIsText);\n\t\t})();\n\t\n\t\tthis.innerHtml = (() => {\n\t\t\tvar len = split ? split.length : 0;\n\t\n\t\t\tvar foo = (li, le, iit, it) => {\n\t\t\t\tif (le > 0)\n\t\t\t\t\treturn li.map((l, i) => foo(l, le - 1, iit[i], it[i]));\n\t\n\t\t\t\tif (iit) {\n\t\t\t\t\tif (it.trim() && this.display == 'container-block') {\n\t\t\t\t\t\treturn it\n\t\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\t\t.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/)\n\t\t\t\t\t\t\t.filter(text => !!text.trim())\n\t\t\t\t\t\t\t.map(escapeHtml)\n\t\t\t\t\t\t\t.map(s => `<p>${s}</p>`).join('');\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn escapeHtml(it);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.display != 'container-block') {\n\t\t\t\t\t// join as HTML\n\t\t\t\t\treturn li.map(c => {\n\t\t\t\t\t\tif (c instanceof TextNode)\n\t\t\t\t\t\t\treturn escapeHtml(c.text);\n\t\t\t\t\t\tif (c instanceof ErrorNode)\n\t\t\t\t\t\t\treturn c.toHtml();\n\t\t\t\t\t\treturn c.outerHtml;\n\t\t\t\t\t}).join('');\n\t\t\t\t}\n\t\n\t\t\t\tvar paragraphs = [], p = [];\n\t\n\t\t\t\tvar commit = () => {\n\t\t\t\t\tif (p.length) {\n\t\t\t\t\t\tparagraphs.push(p);\n\t\t\t\t\t\tp = [];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar add = e => p.push(e);\n\t\n\t\t\t\tli.forEach(c => {\n\t\t\t\t\tif (c instanceof TextNode) {\n\t\t\t\t\t\t// ?: is important\n\t\t\t\t\t\tvar split = c.text.split(/(?:\\r\\n[ \\t]*){2,}|(?:\\r[ \\t]*){2,}|(?:\\n[ \\t]*){2,}/);\n\t\t\t\t\t\tif (split.length < 2) {\n\t\t\t\t\t\t\treturn add(c);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tsplit.forEach((s, i) => {\n\t\t\t\t\t\t\tif (s.trim()) add(this.text(s));\n\t\n\t\t\t\t\t\t\tif (i < split.length - 1) commit();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (c instanceof ErrorNode) {\n\t\t\t\t\t\t// treat errors like inlines\n\t\t\t\t\t\tadd(c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// blocks interrupt paragraphs\n\t\t\t\t\t\tif (c.display != 'inline') {\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\t// direct push to list differentiates non-paragraphs\n\t\t\t\t\t\t\tparagraphs.push(c);\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// inlines do not interrupt paragraphs\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tadd(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tcommit();\n\t\n\t\t\t\treturn paragraphs.map(p => {\n\t\t\t\t\tif (p instanceof Array) {\n\t\t\t\t\t\treturn '<p>' + p.map(n => {\n\t\t\t\t\t\t\tif (n instanceof TextNode)\n\t\t\t\t\t\t\t\treturn escapeHtml(n.text);\n\t\t\t\t\t\t\tif (n instanceof ErrorNode)\n\t\t\t\t\t\t\t\treturn n.toHtml();\n\t\t\t\t\t\t\treturn n.outerHtml;\n\t\t\t\t\t\t}).join('') + '</p>';\n\t\t\t\t\t}\n\t\t\t\t\t// non-paragraphs\n\t\t\t\t\treturn p.outerHtml;\n\t\t\t\t}).join('');\n\t\t\t};\n\t\n\t\t\treturn foo(children, len, this.innerIsText, this.innerText);\n\t\t})();\n\t\n\t\tvar r = render(this, options);\n\t\tthis.outerIsText = r instanceof TextNode;\n\t\tthis.outerText = this.outerIsText ? r.text : null;\n\t\tthis.isError = r instanceof ErrorNode;\n\t\tthis.errorMessage = r instanceof ErrorNode ? r.message : null;\n\t\n\t\tif (this.outerIsText) {\n\t\t\tthis.outerHtml = escapeHtml(this.outerText);\n\t\t} else if (r instanceof HtmlNode) {\n\t\t\tthis.outerHtml = r.html;\n\t\t} else if (r instanceof ErrorNode) {\n\t\t\tthis.outerHtml = r.toHtml();\n\t\t} else {\n\t\t\tthrow TypeError('Render output should be one of TextNode, HtmlNode, or ErrorNode');\n\t\t}\n\t}\n\n\tpublic text(text: string) {\n\t\treturn new TextNode(text);\n\t};\n\t\n\tpublic html(html: string) {\n\t\treturn new HtmlNode({html, display: this.display});\n\t};\n\t\n\tpublic error(message: string) {\n\t\treturn new ErrorNode({\n\t\t\tmessage: `[${this.name}]: ${message}`,\n\t\t\tcode: this.code\n\t\t});\n\t};\n\t\n\tpublic getAttribute(name: string) {\n\t\tfor (var i = 0; i < this.attributes.length; i++) {\n\t\t\tif (this.attributes[i].name == name)\n\t\t\t\treturn this.attributes[i].value;\n\t\t}\n\t\n\t\treturn null;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = [\n\t\t\t'display', 'code', 'attributes', 'split', 'isError', 'errorMessage',\n\t\t\t'innerIsText', 'innerText', 'innerHtml', 'outerIsText', 'outerText',\n\t\t\t'outerHtml'\n\t\t].map(k => k + '='\n\t\t\t+ (typeof this[k] == 'string' || this[k] instanceof Array\n\t\t\t\t? JSON.stringify(this[k])\n\t\t\t\t: this[k] + '')\n\t\t).join('\\n' + '\\t'.repeat(level + 1));\n\t\n\t\tvar b = (function r(children) {\n\t\t\treturn children.map(c => c.toIndentedString(level + 1)).join(',\\n');\n\t\t})(this.children);\n\t\n\t\treturn '\\t'.repeat(level) + `Element[${JSON.stringify(this.name)}](\\n`\n\t\t\t\t+ `${'\\t'.repeat(level + 1)}${a}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}) {\\n`\n\t\t\t+ `${b}\\n`\n\t\t\t+ `${'\\t'.repeat(level)}}`;\n\t};\n\n\tpublic escapeHtml(s: string) {\n\t\treturn escapeHtml(s);\n\t}\n}","import escapeHtml from \"./escapeHtml\";\nimport Node from \"./Node\";\n\nexport default class ErrorNode extends Node {\n\n\tpublic readonly message: string;\n\tpublic readonly code: string;\n\n\tconstructor ({message, code}) {\n\t\tsuper();\n\n\t\tif (typeof message != 'string')\n\t\t\tthrow TypeError('message not string');\n\n\t\tif (typeof code != 'string')\n\t\t\tthrow TypeError('code not string');\n\n\t\tthis.message = message;\n\t\tthis.code = code;\n\t}\n\n\tpublic toHtml() {\n\t\treturn `<code class=\"m42kup-error\" title=\"Error: ${escapeHtml(this.message)}\">${escapeHtml(this.code)}</code>`;\n\t};\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['message', 'code'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn '\\t'.repeat(level) + `Error(${a})`;\n\t};\n}","export default function escapeHtml(s: string) {\n\treturn (s + '').replace(/[&<>\"']/g, m => ({\n\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t\t'\"': '&quot;', '\\'': '&#39;'\n\t})[m]);\n}","import Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class HtmlNode extends Node {\n\n\tpublic readonly html: string;\n\tpublic readonly display: 'inline' | 'leaf-block' | 'container-block';\n\n\tconstructor ({html, display}) {\n\t\tsuper();\n\n\t\tif (typeof html != 'string')\n\t\t\tthrow TypeError('html not string');\n\n\t\tif (!['inline', 'leaf-block', 'container-block'].includes(display))\n\t\t\tthrow TypeError('arg0.display should be one of \"inline\", \"leaf-block\", or \"container-block\".');\n\n\t\tthis.html = html;\n\t\tthis.display = display;\n\t}\n\t\n\tpublic toIndentedString(level: number) {\n\t\tvar a = ['display'].map(k =>\n\t\t\tk + '=' + JSON.stringify(this[k])).join(' ');\n\t\treturn '\\t'.repeat(level) + `Html(${a}) {${JSON.stringify(this.html)}}`;\n\t};\n}","import Node from \"./Node\";\n\n/**\n * the data part of TextNode and HtmlNode instances are intentionally\n * labeled differently, in order to prevent mistakenly\n * using unescaped text data as HTML data, which is an XSS\n * vulnerability.\n */\nexport default class TextNode extends Node {\n\tpublic readonly text: string;\n\n\tconstructor (text: string) {\n\t\tsuper();\n\n\t\tif (typeof text != 'string')\n\t\t\tthrow TypeError('text not string');\n\n\t\tthis.text = text;\n\t}\n\n\tpublic toIndentedString(level: number) {\n\t\treturn '\\t'.repeat(level) + `Text {${JSON.stringify(this.text)}}`;\n\t}\n}","function shallow(o) {\n\tvar o2 = {};\n\n\tfor (var k in o) o2[k] = o[k];\n\n\treturn o2;\n}\n\nfunction copyOptions(o) {\n\tvar o2: any = {};\n\tif (o.tags) o2.tags = shallow(o.tags);\n\tif (o.hljs) o2.hljs = o.hljs;\n\tif (o.katex) o2.katex = o.katex;\n\treturn o2;\n}\n\nfunction tags(o1, o2) {\n\to1 = shallow(o1);\n\t\n\tfor (var k in o2) {\n\t\to1[k] = o2[k];\n\t}\n\n\treturn o1;\n}\n\nfunction options(o1, o2) {\n\tif (typeof o1 != 'object'\n\t\t\t|| typeof o2 != 'object') {\n\t\tthrow TypeError('One of the options provided is not an object');\n\t}\n\n\to1 = copyOptions(o1);\n\t\n\tif (o2.tags) {\n\t\tif (!o1.tags) {\n\t\t\to1.tags = {};\n\t\t}\n\t\t\n\t\to1.tags = tags(o1.tags, o2.tags);\n\t}\n\n\tif (o2.hljs) o1.hljs = o2.hljs;\n\tif (o2.katex) o1.katex = o2.katex;\n\n\treturn o1;\n}\n\nexport default {\n\tcopyOptions,\n\ttags,\n\toptions\n};\n","import parser from './parser';\nimport renderer from './renderer';\nimport highlighter from './highlighter';\nimport cascade from './cascade';\nimport addCodeMirrorMode from './codemirror';\n\nvar globalOptions = {};\n\nfunction cascadeOptions(options) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = cascade.options(globalOptions, options);\n}\n\nfunction setOptions(options) {\n\tif (typeof options != 'object')\n\t\tthrow TypeError('typeof options != \\'object\\'');\n\tglobalOptions = options;\n}\n\nfunction ast2nt(ast, options) {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\toptions = cascade.options(globalOptions, options);\n\n\tvar nt = renderer.ast2nt(ast, options);\n\n\treturn nt;\n}\n\nfunction render(input, options) {\n\tinput += '';\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\t\n\toptions = cascade.options(globalOptions, options);\n\n\tvar pt = parser.input2pt(input);\n\tvar ast = parser.pt2ast(pt);\n\tvar html = renderer.ast2nt(ast, options).outerHtml;\n\t\n\treturn html;\n}\n\nfunction highlight(input) {\n\tinput += '';\n\n\tvar pt = parser.input2pt(input);\n\tvar hl = highlighter.pt2hl(pt);\n\n\treturn hl;\n}\n\nvar m42kup = {\n\tparser,\n\trenderer,\n\thighlighter,\n\tast2nt,\n\trender,\n\thighlight,\n\tcascade: cascadeOptions,\n\tset: setOptions,\n\taddCodeMirrorMode\n};\n\nmodule.exports = m42kup;\n","import peg from '../dist/peg';\n\nfunction input2pt(input) {\n\tvar pt = peg.parse(input);\n\tpt.input = input;\n\t\n\treturn pt;\n}\n\nfunction pt2ast(pt) {\n\tvar input = pt.input;\n\n\tvar r = (function recurse(pt) {\n\t\tvar ast = pt.map(e => {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.text\n\t\t\t\t\t};\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: e.child.text\n\t\t\t\t\t};\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar attributes = e.attributes._type != 'parenthesis'\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: e.attributes.content.filter(({_type}) => _type == 'attribute')\n\t\t\t\t\t\t\t.map(({attribute}) => ({\n\t\t\t\t\t\t\t\tname: attribute[0],\n\t\t\t\t\t\t\t\tvalue: attribute[3]\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'element',\n\t\t\t\t\t\tname: e.name,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tcode: input.substring(e.location.start.offset, e.location.end.offset),\n\t\t\t\t\t\tchildren: recurse(e.children)\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${e.type}`);\n\t\t\t}\n\t\t});\n\n\t\t// join text nodes & remove empty\n\t\tast = ast.reduce((l, r) => {\n\t\t\tif (r.type == 'text') {\n\t\t\t\tif (!r.text) return l;\n\t\t\t\tif (l.length && l[l.length - 1].type == 'text') {\n\t\t\t\t\tl[l.length - 1].text += r.text;\n\t\t\t\t\treturn l;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn l.push(r), l;\n\t\t}, []);\n\n\t\treturn ast;\n\t})(pt.root.children);\n\n\treturn {\n\t\tinput: pt.input,\n\t\troot: {\n\t\t\ttype: 'root',\n\t\t\tchildren: r,\n\t\t\tcode: input\n\t\t}\n\t};\n}\n\nexport default {\n\tinput2pt,\n\tpt2ast\n};","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(children) {\n      \t\treturn {\n      \t\t\troot: {\n      \t\t\t\ttype: 'root',\n      \t\t\t\tchildren,\n      \t\t\t\tlocation: location()\n      \t\t\t}\n      \t\t}\n      \t},\n      peg$c1 = function(lbm, name, attributes, children, rbm) {\n      \t\treturn {\n      \t\t\ttype: 'element',\n      \t\t\tlbm,\n      \t\t\tname,\n      \t\t\tattributes,\n      \t\t\tchildren,\n      \t\t\trbm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c2 = \"[\",\n      peg$c3 = peg$literalExpectation(\"[\", false),\n      peg$c4 = \"<\",\n      peg$c5 = peg$literalExpectation(\"<\", false),\n      peg$c6 = function(a, b) {return (bstack[bstack.length - 1] || 0) <= b.length + 1},\n      peg$c7 = function(a, b) {\n      \t\treturn a + b;\n      \t},\n      peg$c8 = function(a) {\n      \t\tbstack.push(a.length);\n      \t\treturn a;\n      \t},\n      peg$c9 = \"!\",\n      peg$c10 = peg$literalExpectation(\"!\", false),\n      peg$c11 = \"\\\"\",\n      peg$c12 = peg$literalExpectation(\"\\\"\", false),\n      peg$c13 = \"#\",\n      peg$c14 = peg$literalExpectation(\"#\", false),\n      peg$c15 = \"$\",\n      peg$c16 = peg$literalExpectation(\"$\", false),\n      peg$c17 = \"%\",\n      peg$c18 = peg$literalExpectation(\"%\", false),\n      peg$c19 = \"&\",\n      peg$c20 = peg$literalExpectation(\"&\", false),\n      peg$c21 = \"'\",\n      peg$c22 = peg$literalExpectation(\"'\", false),\n      peg$c23 = \")\",\n      peg$c24 = peg$literalExpectation(\")\", false),\n      peg$c25 = \"*\",\n      peg$c26 = peg$literalExpectation(\"*\", false),\n      peg$c27 = \"+\",\n      peg$c28 = peg$literalExpectation(\"+\", false),\n      peg$c29 = \",\",\n      peg$c30 = peg$literalExpectation(\",\", false),\n      peg$c31 = \"-\",\n      peg$c32 = peg$literalExpectation(\"-\", false),\n      peg$c33 = \"/\",\n      peg$c34 = peg$literalExpectation(\"/\", false),\n      peg$c35 = \";\",\n      peg$c36 = peg$literalExpectation(\";\", false),\n      peg$c37 = \"=\",\n      peg$c38 = peg$literalExpectation(\"=\", false),\n      peg$c39 = \">\",\n      peg$c40 = peg$literalExpectation(\">\", false),\n      peg$c41 = \"?\",\n      peg$c42 = peg$literalExpectation(\"?\", false),\n      peg$c43 = \"@\",\n      peg$c44 = peg$literalExpectation(\"@\", false),\n      peg$c45 = \"\\\\\",\n      peg$c46 = peg$literalExpectation(\"\\\\\", false),\n      peg$c47 = \"^\",\n      peg$c48 = peg$literalExpectation(\"^\", false),\n      peg$c49 = \"_\",\n      peg$c50 = peg$literalExpectation(\"_\", false),\n      peg$c51 = \"{\",\n      peg$c52 = peg$literalExpectation(\"{\", false),\n      peg$c53 = \"|\",\n      peg$c54 = peg$literalExpectation(\"|\", false),\n      peg$c55 = \"}\",\n      peg$c56 = peg$literalExpectation(\"}\", false),\n      peg$c57 = \"~\",\n      peg$c58 = peg$literalExpectation(\"~\", false),\n      peg$c59 = /^[a-z]/,\n      peg$c60 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c61 = /^[a-z0-9]/,\n      peg$c62 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c63 = \":\",\n      peg$c64 = peg$literalExpectation(\":\", false),\n      peg$c65 = function(a, b, d, e) {return ':' + d + e.join('')},\n      peg$c66 = function(a, b, c) {\n      \t\treturn a + b + c;\n      \t},\n      peg$c67 = \"\",\n      peg$c68 = \"(\",\n      peg$c69 = peg$literalExpectation(\"(\", false),\n      peg$c70 = /^[a-z0-9\\-]/,\n      peg$c71 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"], \"-\"], false, false),\n      peg$c72 = peg$anyExpectation(),\n      peg$c73 = function(left, name, a, b, c) {return ''},\n      peg$c74 = function(left, name, a, b, c, d) {\n      \t\t\t\t\treturn [a, b, c, d];\n      \t\t\t\t},\n      peg$c75 = /^['\"()[\\] \\t\\n\\r]/,\n      peg$c76 = peg$classExpectation([\"'\", \"\\\"\", \"(\", \")\", \"[\", \"]\", \" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c77 = function(left, name, a, c) {\n      \t\t\t\t\treturn [a, '', c, ''];\n      \t\t\t\t},\n      peg$c78 = function(left, name) {\n      \t\t\t\t\treturn ['', '', '', ''];\n      \t\t\t\t},\n      peg$c79 = function(left, name, value) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'attribute',\n      \t\t\t\t\tattribute: [name].concat(value)\n      \t\t\t\t};\n      \t\t\t},\n      peg$c80 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'whitespace',\n      \t\t\t\t\twhitespace: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c81 = function(left, a) {\n      \t\t\t\treturn {\n      \t\t\t\t\t_type: 'error',\n      \t\t\t\t\terror: a\n      \t\t\t\t}\n      \t\t\t},\n      peg$c82 = function(left, content) {return ''},\n      peg$c83 = function(left, content, right) {\n      \t\treturn {\n      \t\t\t_type: 'parenthesis',\n      \t\t\tleft,\n      \t\t\tcontent,\n      \t\t\tright\n      \t\t}\n      \t},\n      peg$c84 = \".\",\n      peg$c85 = peg$literalExpectation(\".\", false),\n      peg$c86 = function(a) {\n      \t\treturn {\n      \t\t\t_type: 'separator',\n      \t\t\tseparator: a\n      \t\t}\n      \t},\n      peg$c87 = \"]\",\n      peg$c88 = peg$literalExpectation(\"]\", false),\n      peg$c89 = function(a, b) {return (bstack[bstack.length - 1] || 0) == a.length + 1},\n      peg$c90 = function(a, b) {return a + b},\n      peg$c91 = function() {return ''},\n      peg$c92 = function(a) {\n      \t\tbstack.pop();\n      \t\treturn a;\n      \t},\n      peg$c93 = \"`\",\n      peg$c94 = peg$literalExpectation(\"`\", false),\n      peg$c95 = function(b) {return b},\n      peg$c96 = function(a) {\n      \t\treturn {\n      \t\t\ttype: 'text',\n      \t\t\ttext: a.join(''),\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c97 = function(lvm, separator, child, rvm) {\n      \t\treturn {\n      \t\t\ttype: 'verbatim',\n      \t\t\tlvm,\n      \t\t\tseparator,\n      \t\t\tchild,\n      \t\t\trvm,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c98 = function(a, b) {\n      \t\tvlevel = b.length + 1;\n      \t\treturn a + b.join('');\n      \t},\n      peg$c99 = function(a, b) {return vlevel == a.length + 1},\n      peg$c100 = function(a, b) {return a.join('') + b},\n      peg$c101 = /^[ \\t\\n\\r]/,\n      peg$c102 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsethings();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsethings() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsething();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsething();\n    }\n\n    return s0;\n  }\n\n  function peg$parsething() {\n    var s0;\n\n    s0 = peg$parseelement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseverbatim();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetext();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseelement() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm_push();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetag_name();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseattributes();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsethings();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parserbm_pop();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c1(s1, s2, s3, s4, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s4 = peg$c4;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s4 = peg$c4;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c6(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselbm_push() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parselbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c8(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetag_name() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s2 = peg$c11;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s2 = peg$c11;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          s1 = [];\n          if (input.charCodeAt(peg$currPos) === 36) {\n            s2 = peg$c15;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              if (input.charCodeAt(peg$currPos) === 36) {\n                s2 = peg$c15;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = [];\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s2 = peg$c17;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s2 !== peg$FAILED) {\n              while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 37) {\n                  s2 = peg$c17;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                }\n              }\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = [];\n              if (input.charCodeAt(peg$currPos) === 38) {\n                s2 = peg$c19;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                  s1.push(s2);\n                  if (input.charCodeAt(peg$currPos) === 38) {\n                    s2 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                }\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = [];\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s2 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s2 !== peg$FAILED) {\n                  while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                      s2 = peg$c21;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                    }\n                  }\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = [];\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s2 = peg$c23;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                  }\n                  if (s2 !== peg$FAILED) {\n                    while (s2 !== peg$FAILED) {\n                      s1.push(s2);\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s2 = peg$c23;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                      }\n                    }\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = [];\n                    if (input.charCodeAt(peg$currPos) === 42) {\n                      s2 = peg$c25;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                    }\n                    if (s2 !== peg$FAILED) {\n                      while (s2 !== peg$FAILED) {\n                        s1.push(s2);\n                        if (input.charCodeAt(peg$currPos) === 42) {\n                          s2 = peg$c25;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n                        }\n                      }\n                    } else {\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = [];\n                      if (input.charCodeAt(peg$currPos) === 43) {\n                        s2 = peg$c27;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                      }\n                      if (s2 !== peg$FAILED) {\n                        while (s2 !== peg$FAILED) {\n                          s1.push(s2);\n                          if (input.charCodeAt(peg$currPos) === 43) {\n                            s2 = peg$c27;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                          }\n                        }\n                      } else {\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = [];\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s2 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s2 !== peg$FAILED) {\n                          while (s2 !== peg$FAILED) {\n                            s1.push(s2);\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s2 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                          }\n                        } else {\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = [];\n                          if (input.charCodeAt(peg$currPos) === 45) {\n                            s2 = peg$c31;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                          }\n                          if (s2 !== peg$FAILED) {\n                            while (s2 !== peg$FAILED) {\n                              s1.push(s2);\n                              if (input.charCodeAt(peg$currPos) === 45) {\n                                s2 = peg$c31;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                              }\n                            }\n                          } else {\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = [];\n                            if (input.charCodeAt(peg$currPos) === 47) {\n                              s2 = peg$c33;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                            }\n                            if (s2 !== peg$FAILED) {\n                              while (s2 !== peg$FAILED) {\n                                s1.push(s2);\n                                if (input.charCodeAt(peg$currPos) === 47) {\n                                  s2 = peg$c33;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                                }\n                              }\n                            } else {\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = [];\n                              if (input.charCodeAt(peg$currPos) === 59) {\n                                s2 = peg$c35;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                              }\n                              if (s2 !== peg$FAILED) {\n                                while (s2 !== peg$FAILED) {\n                                  s1.push(s2);\n                                  if (input.charCodeAt(peg$currPos) === 59) {\n                                    s2 = peg$c35;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                                  }\n                                }\n                              } else {\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = [];\n                                if (input.charCodeAt(peg$currPos) === 61) {\n                                  s2 = peg$c37;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  while (s2 !== peg$FAILED) {\n                                    s1.push(s2);\n                                    if (input.charCodeAt(peg$currPos) === 61) {\n                                      s2 = peg$c37;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                                    }\n                                  }\n                                } else {\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = [];\n                                  if (input.charCodeAt(peg$currPos) === 62) {\n                                    s2 = peg$c39;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    while (s2 !== peg$FAILED) {\n                                      s1.push(s2);\n                                      if (input.charCodeAt(peg$currPos) === 62) {\n                                        s2 = peg$c39;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                                      }\n                                    }\n                                  } else {\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = [];\n                                    if (input.charCodeAt(peg$currPos) === 63) {\n                                      s2 = peg$c41;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      while (s2 !== peg$FAILED) {\n                                        s1.push(s2);\n                                        if (input.charCodeAt(peg$currPos) === 63) {\n                                          s2 = peg$c41;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                                        }\n                                      }\n                                    } else {\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = [];\n                                      if (input.charCodeAt(peg$currPos) === 64) {\n                                        s2 = peg$c43;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        while (s2 !== peg$FAILED) {\n                                          s1.push(s2);\n                                          if (input.charCodeAt(peg$currPos) === 64) {\n                                            s2 = peg$c43;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                                          }\n                                        }\n                                      } else {\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = [];\n                                        if (input.charCodeAt(peg$currPos) === 92) {\n                                          s2 = peg$c45;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          while (s2 !== peg$FAILED) {\n                                            s1.push(s2);\n                                            if (input.charCodeAt(peg$currPos) === 92) {\n                                              s2 = peg$c45;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                                            }\n                                          }\n                                        } else {\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = [];\n                                          if (input.charCodeAt(peg$currPos) === 94) {\n                                            s2 = peg$c47;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            while (s2 !== peg$FAILED) {\n                                              s1.push(s2);\n                                              if (input.charCodeAt(peg$currPos) === 94) {\n                                                s2 = peg$c47;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                                              }\n                                            }\n                                          } else {\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = [];\n                                            if (input.charCodeAt(peg$currPos) === 95) {\n                                              s2 = peg$c49;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              while (s2 !== peg$FAILED) {\n                                                s1.push(s2);\n                                                if (input.charCodeAt(peg$currPos) === 95) {\n                                                  s2 = peg$c49;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                                                }\n                                              }\n                                            } else {\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = [];\n                                              if (input.charCodeAt(peg$currPos) === 123) {\n                                                s2 = peg$c51;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                while (s2 !== peg$FAILED) {\n                                                  s1.push(s2);\n                                                  if (input.charCodeAt(peg$currPos) === 123) {\n                                                    s2 = peg$c51;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                                                  }\n                                                }\n                                              } else {\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = [];\n                                                if (input.charCodeAt(peg$currPos) === 124) {\n                                                  s2 = peg$c53;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  while (s2 !== peg$FAILED) {\n                                                    s1.push(s2);\n                                                    if (input.charCodeAt(peg$currPos) === 124) {\n                                                      s2 = peg$c53;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                                                    }\n                                                  }\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = [];\n                                                  if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s2 = peg$c55;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    while (s2 !== peg$FAILED) {\n                                                      s1.push(s2);\n                                                      if (input.charCodeAt(peg$currPos) === 125) {\n                                                        s2 = peg$c55;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                                                      }\n                                                    }\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = [];\n                                                    if (input.charCodeAt(peg$currPos) === 126) {\n                                                      s2 = peg$c57;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      while (s2 !== peg$FAILED) {\n                                                        s1.push(s2);\n                                                        if (input.charCodeAt(peg$currPos) === 126) {\n                                                          s2 = peg$c57;\n                                                          peg$currPos++;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                                        }\n                                                      }\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c59.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c61.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c62); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s6 = peg$c63;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (peg$c59.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = [];\n              if (peg$c61.test(input.charAt(peg$currPos))) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c62); }\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c65(s1, s2, s7, s8);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s6 = peg$c63;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (peg$c59.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                if (peg$c61.test(input.charAt(peg$currPos))) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (peg$c61.test(input.charAt(peg$currPos))) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c65(s1, s2, s7, s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = input.substring(s3, peg$currPos);\n          } else {\n            s3 = s4;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c66(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$c67;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattributes() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c68;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      s5 = [];\n      if (peg$c70.test(input.charAt(peg$currPos))) {\n        s6 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s6 !== peg$FAILED) {\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c70.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c71); }\n          }\n        }\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s4 = input.substring(s4, peg$currPos);\n      } else {\n        s4 = s5;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s6 = peg$c37;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s7 = peg$c11;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            s9 = [];\n            s10 = peg$currPos;\n            s11 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s12 = peg$c11;\n              peg$currPos++;\n            } else {\n              s12 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            peg$silentFails--;\n            if (s12 === peg$FAILED) {\n              s11 = void 0;\n            } else {\n              peg$currPos = s11;\n              s11 = peg$FAILED;\n            }\n            if (s11 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s12 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s12 !== peg$FAILED) {\n                s11 = [s11, s12];\n                s10 = s11;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s10;\n              s10 = peg$FAILED;\n            }\n            while (s10 !== peg$FAILED) {\n              s9.push(s10);\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n            }\n            if (s9 !== peg$FAILED) {\n              s8 = input.substring(s8, peg$currPos);\n            } else {\n              s8 = s9;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s9 = peg$c11;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              if (s9 === peg$FAILED) {\n                s9 = peg$currPos;\n                s10 = peg$parseEOF();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s9;\n                  s10 = peg$c73(s1, s4, s6, s7, s8);\n                }\n                s9 = s10;\n              }\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s7 = peg$c21;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c22); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s12 = peg$c21;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s9 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$currPos;\n              s10 = peg$currPos;\n              peg$silentFails++;\n              if (peg$c75.test(input.charAt(peg$currPos))) {\n                s11 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s11 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c76); }\n              }\n              peg$silentFails--;\n              if (s11 === peg$FAILED) {\n                s10 = void 0;\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              if (s10 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s10 = [s10, s11];\n                  s9 = s10;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s9;\n                s9 = peg$FAILED;\n              }\n              while (s9 !== peg$FAILED) {\n                s8.push(s9);\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              }\n              if (s8 !== peg$FAILED) {\n                s7 = input.substring(s7, peg$currPos);\n              } else {\n                s7 = s8;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c77(s1, s4, s6, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$c67;\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c78(s1, s4);\n              }\n              s5 = s6;\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c79(s1, s4, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c80(s1, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c23;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$currPos;\n            peg$silentFails++;\n            s8 = peg$parserbm();\n            peg$silentFails--;\n            if (s8 === peg$FAILED) {\n              s7 = void 0;\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s8 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s8 !== peg$FAILED) {\n                s6 = [s6, s7, s8];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = input.substring(s4, peg$currPos);\n          } else {\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c81(s1, s4);\n          }\n          s3 = s4;\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        s5 = [];\n        if (peg$c70.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s6 !== peg$FAILED) {\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c70.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n          }\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = input.substring(s4, peg$currPos);\n        } else {\n          s4 = s5;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c37;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s7 = peg$c11;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$currPos;\n              s11 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s12 = peg$c11;\n                peg$currPos++;\n              } else {\n                s12 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c12); }\n              }\n              peg$silentFails--;\n              if (s12 === peg$FAILED) {\n                s11 = void 0;\n              } else {\n                peg$currPos = s11;\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s12 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s12 !== peg$FAILED) {\n                  s11 = [s11, s12];\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s12 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = input.substring(s8, peg$currPos);\n              } else {\n                s8 = s9;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s9 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c12); }\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseEOF();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s9;\n                    s10 = peg$c73(s1, s4, s6, s7, s8);\n                  }\n                  s9 = s10;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s6 = peg$c37;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s7 = peg$c21;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                s9 = [];\n                s10 = peg$currPos;\n                s11 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s12 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n                peg$silentFails--;\n                if (s12 === peg$FAILED) {\n                  s11 = void 0;\n                } else {\n                  peg$currPos = s11;\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s12 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s12 !== peg$FAILED) {\n                    s11 = [s11, s12];\n                    s10 = s11;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  s11 = peg$currPos;\n                  peg$silentFails++;\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s12 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s12 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  peg$silentFails--;\n                  if (s12 === peg$FAILED) {\n                    s11 = void 0;\n                  } else {\n                    peg$currPos = s11;\n                    s11 = peg$FAILED;\n                  }\n                  if (s11 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s12 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s12 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s12 !== peg$FAILED) {\n                      s11 = [s11, s12];\n                      s10 = s11;\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  s8 = input.substring(s8, peg$currPos);\n                } else {\n                  s8 = s9;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s9 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseEOF();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s9;\n                      s10 = peg$c73(s1, s4, s6, s7, s8);\n                    }\n                    s9 = s10;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c74(s1, s4, s6, s7, s8, s9);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s6 = peg$c37;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$currPos;\n                s10 = peg$currPos;\n                peg$silentFails++;\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s11 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n                peg$silentFails--;\n                if (s11 === peg$FAILED) {\n                  s10 = void 0;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s10 = [s10, s11];\n                    s9 = s10;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$currPos;\n                  s10 = peg$currPos;\n                  peg$silentFails++;\n                  if (peg$c75.test(input.charAt(peg$currPos))) {\n                    s11 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                  }\n                  peg$silentFails--;\n                  if (s11 === peg$FAILED) {\n                    s10 = void 0;\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                  if (s10 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s11 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s11 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s10 = [s10, s11];\n                      s9 = s10;\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = input.substring(s7, peg$currPos);\n                } else {\n                  s7 = s8;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c77(s1, s4, s6, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$c67;\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c78(s1, s4);\n                }\n                s5 = s6;\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c79(s1, s4, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c80(s1, s4);\n          }\n          s3 = s4;\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s7 = peg$c23;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserbm();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s6 = [s6, s7, s8];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = input.substring(s4, peg$currPos);\n            } else {\n              s4 = s5;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c81(s1, s4);\n            }\n            s3 = s4;\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c23;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c82(s1, s2);\n          }\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c83(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c84;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c85); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c67;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c86(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s3 = peg$c39;\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s3 = peg$c39;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s2 = peg$c87;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c89(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c90(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parserbm_pop() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parserbm();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c92(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetext() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parselbm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parserbm();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s6 = peg$c93;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c94); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c95(s6);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parselbm();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parserbm();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 96) {\n              s6 = peg$c93;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c94); }\n            }\n            peg$silentFails--;\n            if (s6 === peg$FAILED) {\n              s5 = void 0;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c95(s6);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseverbatim() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parselvm();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseverbatim_separator();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseverbatim_text();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parservm();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c97(s1, s2, s3, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselvm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c93;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s3 = peg$c4;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (input.charCodeAt(peg$currPos) === 60) {\n          s3 = peg$c4;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c98(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_separator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c84;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c85); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$c67;\n    }\n\n    return s0;\n  }\n\n  function peg$parservm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s2 = peg$c39;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s2 = peg$c39;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 96) {\n        s2 = peg$c93;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c99(s1, s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c100(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseEOF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseverbatim_text() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parservm();\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$c95(s4);\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parservm();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = void 0;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c95(s4);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$c101.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c101.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c101.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c102); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n\n  \tvar bstack = [], vlevel;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import defaultTagNameMap from './elements/default';\nimport cascade from '../cascade';\nimport Element from './nodes/Element';\nimport ElementClass from './nodes/ElementClass';\nimport Node from './nodes/Node';\nimport ErrorNode from './nodes/ErrorNode';\nimport TextNode from './nodes/TextNode';\nimport HtmlNode from './nodes/HtmlNode';\n\nvar rootClass = new ElementClass({\n\tname: '[root]',\n\tdisplay: 'container-block',\n\trender: el => el.html(el.innerHtml)\n});\n\nfunction ast2nt(ast, options) {\n\tif (!options) options = {};\n\tif (!options.tags) options.tags = {};\n\n\tvar tagNameMap = cascade.tags(defaultTagNameMap, options.tags);\n\t\n\treturn (function recurse(tree) {\n\t\tif (tree.type == 'root') {\n\t\t\treturn rootClass.instantiate({\n\t\t\t\tcode: tree.code,\n\t\t\t\tattributes: [],\n\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\toptions\n\t\t\t});\n\t\t}\n\t\tif (tree.type == 'text') {\n\t\t\treturn new TextNode(tree.text);\n\t\t}\n\t\t\n\t\tif (tree.type == 'error') {\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: 'Parser error',\n\t\t\t\tcode: tree.text\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tree.type == 'element') {\n\t\t\tif (tree.name in tagNameMap && tagNameMap[tree.name]) {\n\t\t\t\tif (tagNameMap[tree.name].split) {\n\t\t\t\t\tvar recurseSplit = (list, split) => {\n\t\t\t\t\t\tif (split.length == 0)\n\t\t\t\t\t\t\treturn list.map(recurse);\n\n\t\t\t\t\t\tvar s = split[split.length - 1];\n\n\t\t\t\t\t\tvar a = [], b;\n\n\t\t\t\t\t\t// find delimiters\n\t\t\t\t\t\tlist = list.map(l => {\n\t\t\t\t\t\t\tif (l.type == 'element' && l.name == s\n\t\t\t\t\t\t\t\t\t&& !l.children.length) {\n\t\t\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn l;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// trim left\n\t\t\t\t\t\tif (list.length && list[0].type == 'text'\n\t\t\t\t\t\t\t\t&& !list[0].text.trim()) {\n\t\t\t\t\t\t\tlist = list.slice(1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add omitted delimiter\n\t\t\t\t\t\tif (!(list.length && list[0].type == 'delimiter')) {\n\t\t\t\t\t\t\tlist.unshift({\n\t\t\t\t\t\t\t\ttype: 'delimiter'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\t\t\tif (list[i].type == 'delimiter') {\n\t\t\t\t\t\t\t\tif (b) a.push(b);\n\t\t\t\t\t\t\t\tb = [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tb.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ta.push(b);\n\n\t\t\t\t\t\treturn a.map(e => recurseSplit(e, split.slice(0, -1)));\n\t\t\t\t\t};\n\n\t\t\t\t\treturn tagNameMap[tree.name].instantiate({\n\t\t\t\t\t\tcode: tree.code,\n\t\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\t\tchildren: recurseSplit(\n\t\t\t\t\t\t\ttree.children,\n\t\t\t\t\t\t\ttagNameMap[tree.name].split\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn tagNameMap[tree.name].instantiate({\n\t\t\t\t\tcode: tree.code,\n\t\t\t\t\tattributes: tree.attributes,\n\t\t\t\t\tchildren: tree.children.map(recurse),\n\t\t\t\t\toptions\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new ErrorNode({\n\t\t\t\tmessage: tree.name ? `Undefined tag name [${tree.name}]` : 'No tag name',\n\t\t\t\tcode: tree.code\n\t\t\t});\n\t\t}\n\n\t\tthrow TypeError(tree.type);\n\t})(ast.root);\n}\n\nexport default {\n\tast2nt,\n\tNode,\n\tTextNode,\n\tHtmlNode,\n\tErrorNode,\n\tElementClass,\n\tElement\n};\n","import ElementClass from \"../nodes/ElementClass\";\n\nvar tagNameMap: any = {};\n\ntagNameMap.comment = new ElementClass({\n\tname: 'comment',\n\tdisplay: 'inline',\n\trender: el => el.text('')\n});\n\ntagNameMap.entity = new ElementClass({\n\tname: 'entity',\n\tdisplay: 'inline',\n\trender: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tif(!/^([a-z]{1,50}|#[0-9]{1,10}|#x[0-9a-f]{1,10})$/i.test(el.innerText))\n\t\t\treturn el.error('Invalid value');\n\n\t\treturn el.html(`&${el.innerText};`);\n\t}\n});\n\n[\n\t'b', 'code', 'i', 'u', 'sup', 'sub'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname: name,\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\n[\n\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname: name,\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}</${name}>`);\n\t}\n}));\n\ntagNameMap['blockquote'] = new ElementClass({\n\tname: 'blockquote',\n\tdisplay: 'container-block',\n\trender: el => {\n\t\tvar type = el.getAttribute('type');\n\n\t\tif (['info', 'warn'].includes(type))\n\t\t\treturn el.html(`<blockquote class=\"m42kup-bq-${type}\">${el.innerHtml}</blockquote>`);\n\n\t\treturn el.html(`<blockquote>${el.innerHtml}</blockquote>`);\n\t}\n});\n\n[\n\t'br'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n[\n\t'hr'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\treturn el.html(`<${name}>${el.innerHtml}`);\n\t}\n}));\n\n['ul', 'ol'].forEach(name => {\n\ttagNameMap[name] = new ElementClass({\n\t\tname,\n\t\tdisplay: 'container-block',\n\t\tsplit: '*',\n\t\trender: el => {\n\t\t\treturn el.html(`<${name}>`\n\t\t\t\t+ el.innerHtml.map(h => `<li>${h}</li>`).join('')\n\t\t\t\t+ `</${name}>`);\n\t\t}\n\t});\n});\n\ntagNameMap.table = new ElementClass({\n\tname: 'table',\n\tdisplay: 'container-block',\n\tsplit: ['*', '**'],\n\trender: el => {\n\t\tvar n = el.innerHtml.map(e => e.length).reduce((l, r) => l < r ? r : l);\n\n\t\treturn el.html('<table>'\n\t\t\t+ el.innerHtml.map(hh => `<tr>${\n\t\t\t\thh.concat(Array(n - hh.length).fill(''))\n\t\t\t\t\t.map(h => `<td>${h}</td>`).join('')\n\t\t\t}</tr>`).join('')\n\t\t\t+ '</table>');\n\t}\n});\n\ntagNameMap.blockcode = new ElementClass({\n\tname: 'blockcode',\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\tvar trimmed = el.innerHtml.replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\t\treturn el.html(`<pre><code>${trimmed}\\n</code></pre>`);\n\t}\n});\n\ntagNameMap.bi = new ElementClass({\n\tname: 'bi',\n\tdisplay: 'inline',\n\trender: el => {\n\t\treturn el.html(`<i><b>${el.innerHtml}</b></i>`);\n\t}\n});\n\nfunction normalizeUrl(url) {\n\turl = url.trim();\n\n\t// fragment\n\tif (/^#/.test(url)) {\n\t\tif (/^#[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\t// relative URL\n\tif (/^(\\/|\\.\\/|\\.\\.\\/)/.test(url)) {\n\t\tif (/^(\\/|\\.\\/|\\.\\.\\/)[^\\s]*$/.test(url)) {\n\t\t\treturn url;\n\t\t} else return false;\n\t}\n\n\tif (!/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)/.test(url))\n\t\turl = 'http://' + url;\n\n\t// see issue #17\n\tif (/^(http:\\/\\/|https:\\/\\/|ftp:\\/\\/)[a-z0-9]+(-+[a-z0-9]+)*(\\.[a-z0-9]+(-+[a-z0-9]+)*)+\\.?(:[0-9]{1,5})?(\\/[^\\s]*)?$/.test(url)) {\n\t\treturn url;\n\t} else return false;\n}\n\ntagNameMap.link = new ElementClass({\n\tname: 'link',\n\tdisplay: 'inline',\n\trender: el => {\n\t\tvar href = el.getAttribute('href');\n\n\t\tif (href == null) {\n\t\t\tif (!el.innerIsText)\n\t\t\t\treturn el.error('Non-text input');\n\n\t\t\tlet url = normalizeUrl(el.innerText);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${htmlUrl}</a>`);\n\t\t} else {\n\t\t\tlet url = normalizeUrl(href);\n\t\t\tif (!url) return el.error('Invalid URL');\n\n\t\t\tlet htmlUrl = el.escapeHtml(url);\n\t\t\treturn el.html(`<a href=\"${htmlUrl}\" title=\"${htmlUrl}\">${el.innerHtml}</a>`);\n\t\t}\n\t}\n});\n\ntagNameMap.img = new ElementClass({\n\tname: 'img',\n\tdisplay: 'leaf-block',\n\trender: el => {\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar url = normalizeUrl(el.innerText);\n\t\tif (!url) return el.error('Invalid URL');\n\n\t\tvar htmlUrl = el.escapeHtml(url);\n\t\treturn el.html(`<img src=\"${htmlUrl}\">`);\n\t}\n});\n\n[\n\t'squote', 'dquote'\n].forEach(name => tagNameMap[name] = new ElementClass({\n\tname,\n\tdisplay: 'inline',\n\trender: el => {\n\t\tvar quotes = {\n\t\t\tsquote: {\n\t\t\t\tnormal: ['\\u2018', '\\u2019'],\n\t\t\t\tangle: ['\\u3008', '\\u3009'],\n\t\t\t\tcorner: ['\\u300c', '\\u300d']\n\t\t\t},\n\t\t\tdquote: {\n\t\t\t\tnormal: ['\\u201c', '\\u201d'],\n\t\t\t\tangle: ['\\u300a', '\\u300b'],\n\t\t\t\tcorner: ['\\u300e', '\\u300f']\n\t\t\t}\n\t\t};\n\n\t\tvar type = el.getAttribute('type');\n\t\tif (!['angle', 'corner'].includes(type))\n\t\t\ttype = 'normal';\n\n\t\treturn el.html(`${quotes[name][type][0]}${el.innerHtml}${quotes[name][type][1]}`);\n\t}\n}));\n\ntagNameMap.highlight = new ElementClass({\n\tname: 'highlight',\n\tdisplay: 'leaf-block',\n\trender: (el, options) => {\n\t\tif (!options.hljs)\n\t\t\treturn el.error('Element not implemented (options.highlight not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar commonLangs = [\n\t\t\t'apache', 'bash', 'coffeescript', 'cpp', 'cs',\n\t\t\t'css', 'diff', 'http', 'ini', 'java',\n\t\t\t'javascript', 'json', 'makefile', 'xml', 'markdown',\n\t\t\t'nginx', 'objectivec', 'perl', 'php', 'python',\n\t\t\t'ruby', 'sql'\n\t\t];\n\n\t\tvar trimmed = el.innerText.replace(/(^[ \\t]*(\\r\\n|\\r|\\n))|((\\r\\n|\\r|\\n)[ \\t]*$)/g, '');\n\n\t\tvar highlighted;\n\n\t\tif (commonLangs.includes(el.getAttribute('lang'))) {\n\t\t\tvar lang = el.getAttribute('lang');\n\t\t\thighlighted = options.hljs.highlight(lang, trimmed).value;\n\t\t} else {\n\t\t\thighlighted = options.hljs.highlightAuto(trimmed, commonLangs).value;\n\t\t}\n\n\t\treturn el.html(`<pre class=\"hljs\"><code>${highlighted}\\n</code></pre>`);\n\t}\n});\n \ntagNameMap.math = new ElementClass({\n\tname: 'math',\n\tdisplay: 'inline',\n\trender: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: false,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\ntagNameMap.displaymath = new ElementClass({\n\tname: 'displaymath',\n\tdisplay: 'leaf-block',\n\trender: (el, options) => {\n\t\tif (!options.katex)\n\t\t\treturn el.error('Element not implemented (options.katex not given)');\n\n\t\tif (!el.innerIsText)\n\t\t\treturn el.error('Non-text input');\n\n\t\tvar rendered = options.katex.renderToString(el.innerText, {\n\t\t\tthrowOnError: false,\n\t\t\tdisplayMode: true,\n\t\t\tstrict: 'error'\n\t\t});\n\n\t\treturn el.html(rendered);\n\t}\n});\n\n// tag name aliases ordered by char code\nvar aliases = {\n\t'\"': 'dquote',\n\t'$': 'math',\n\t'$$': 'displaymath',\n\t'%': 'comment',\n\t'&': 'entity',\n\t'\\'': 'squote',\n\t'*': 'i',\n\t'**': 'b',\n\t'***': 'bi',\n\t';': 'code',\n\t';;': 'blockcode',\n\t';;;': 'highlight',\n\t'=': 'h1',\n\t'==': 'h2',\n\t'===': 'h3',\n\t'====': 'h4',\n\t'=====': 'h5',\n\t'======': 'h6',\n\t'>': 'blockquote',\n\t'\\\\': 'br',\n\t'^': 'sup',\n\t'_': 'sub',\n\t'~': 'link',\n\t'~~': 'img'\n};\n\nfor (var k in aliases) {\n\tif (!tagNameMap[aliases[k]]) {\n\t\tthrow TypeError('aliasing failed');\n\t}\n\ttagNameMap[k] = tagNameMap[aliases[k]];\n}\n\nexport default tagNameMap;","var escapeHtml = s => (s + '').replace(/[&<>\"']/g, m => ({\n\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n\t'\"': '&quot;', '\\'': '&#39;'\n})[m]);\n\nfunction makeHtml(fragment) {\n\treturn `<span class=\"m42hl-${fragment.type}\">${fragment.html || escapeHtml(fragment.text)}</span>`;\n}\n\nfunction pt2hl(pt) {\n\treturn (function recurse(pt) {\n\t\tvar ret = '';\n\n\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\tswitch(pt[i].type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].text\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'element':\n\t\t\t\t\tvar tmp = makeHtml({\n\t\t\t\t\t\ttype: 'lbm',\n\t\t\t\t\t\ttext: pt[i].lbm\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tn',\n\t\t\t\t\t\ttext: pt[i].name\n\t\t\t\t\t})\n\t\t\t\t\t\t+ (p => {\n\t\t\t\t\t\tswitch (p._type) {\n\t\t\t\t\t\t\tcase 'parenthesis':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'lpm',\n\t\t\t\t\t\t\t\t\ttext: p.left\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t+ p.content.map(q => {\n\t\t\t\t\t\t\t\t\tswitch (q._type) {\n\t\t\t\t\t\t\t\t\t\tcase 'attribute':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pk',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[0]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'eq',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[1]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'lqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[2]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'pv',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[3]\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'rqm',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.attribute[4]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'whitespace':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.whitespace\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'err',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: q.error\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).join('')\n\t\t\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'rpm',\n\t\t\t\t\t\t\t\t\ttext: p.right\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcase 'separator':\n\t\t\t\t\t\t\t\treturn makeHtml({\n\t\t\t\t\t\t\t\t\ttype: 'sp',\n\t\t\t\t\t\t\t\t\ttext: p.separator\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow Error('Unknown type');\n\t\t\t\t\t\t}\n\t\t\t\t\t})(pt[i].attributes)\n\t\t\t\t\t\t+ recurse(pt[i].children)\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rbm',\n\t\t\t\t\t\ttext: pt[i].rbm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'elem',\n\t\t\t\t\t\thtml: tmp\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'verbatim':\n\t\t\t\t\tvar tmp2 = makeHtml({\n\t\t\t\t\t\ttype: 'lvm',\n\t\t\t\t\t\ttext: pt[i].lvm + pt[i].separator\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'tx',\n\t\t\t\t\t\ttext: pt[i].child.text\n\t\t\t\t\t})\n\t\t\t\t\t\t+ makeHtml({\n\t\t\t\t\t\ttype: 'rvm',\n\t\t\t\t\t\ttext: pt[i].rvm\n\t\t\t\t\t});\n\n\t\t\t\t\tret += makeHtml({\n\t\t\t\t\t\ttype: 'verb',\n\t\t\t\t\t\thtml: tmp2\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(`Unknown type: ${pt[i].type}`);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t})(pt.root.children);\n}\n\nexport default {\n\tpt2hl\n};","var STATE_NORMAL = 0,\n\tSTATE_ATTRIBUTE_NAME = 1,\n\tSTATE_ATTRIBUTE_EQ = 2,\n\tSTATE_ATTRIBUTE_VALUE = 3,\n\tSTATE_ATTRIBUTE_DQUOTE = 4,\n\tSTATE_ATTRIBUTE_SQUOTE = 5;\n\nexport default function addCodeMirrorMode(CodeMirror) {\n\tfunction token(stream, state) {\n\t\tif ((state.levels[state.levels.length - 1] || 0) < 0) {\n\t\t\tvar lvmLevel = -state.levels[state.levels.length - 1];\n\t\t\tvar rvmString = '>'.repeat(lvmLevel - 1) + '`';\n\t\t\tif (stream.skipTo(rvmString)) {\n\t\t\t\tstream.match(rvmString);\n\t\t\t\tstate.levels.pop();\n\t\t\t} else stream.skipToEnd();\n\n\t\t\treturn 'comment';\n\t\t}\n\n\t\tvar c = stream.peek();\n\n\t\tif (![STATE_ATTRIBUTE_DQUOTE, STATE_ATTRIBUTE_SQUOTE].includes(state.status)\n\t\t\t\t&& ['>', ']'].includes(c)) {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel > 0) {\n\t\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\t\tif (stream.match(rbmString)) {\n\t\t\t\t\tstate.levels.pop();\n\t\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\t\treturn 'tag';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (state.status != STATE_NORMAL) {\n\t\t\tif (stream.match(')')) {\n\t\t\t\tstate.status = STATE_NORMAL;\n\t\t\t\treturn 'tag';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_NAME) {\n\t\t\t\tif (stream.match(/^[a-z0-9-]+/)) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_EQ;\n\t\t\t\t\treturn 'attribute';\n\t\t\t\t} else if (stream.match(/^[ \\t\\n\\r]+/)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn 'error';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_EQ) {\n\t\t\t\tif (stream.match('=')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_VALUE;\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_VALUE) {\n\t\t\t\tif (stream.match('\"')) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_DQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tif (stream.match(\"'\")) {\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_SQUOTE;\n\t\t\t\t\treturn 'string';\n\t\t\t\t}\n\n\t\t\t\tstream.match(/^[^'\"()\\[\\] \\t\\n\\r]*/);\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_DQUOTE) {\n\t\t\t\tif (stream.skipTo('\"')) {\n\t\t\t\t\tstream.match('\"');\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\n\t\t\tif (state.status == STATE_ATTRIBUTE_SQUOTE) {\n\t\t\t\tif (stream.skipTo(\"'\")) {\n\t\t\t\t\tstream.match(\"'\");\n\t\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t\t} else stream.skipToEnd();\n\n\t\t\t\treturn 'string';\n\t\t\t}\n\t\t}\n\n\t\tif (c == '`') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tstate.levels.push(-level);\n\n\t\t\treturn 'comment';\n\t\t} else if (c == '[') {\n\t\t\tstream.next();\n\n\t\t\tvar level = 1;\n\t\t\twhile (c = stream.next()) {\n\t\t\t\tif (c != '<') {\n\t\t\t\t\tstream.backUp(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}\n\n\t\t\tvar currentLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (level < currentLevel) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar tagNameRegex = /^(?:\\!+|\\\"+|\\#+|\\$+|\\%+|\\&+|\\'+|\\)+|\\*+|\\++|\\,+|\\-+|\\/+|\\;+|\\=+|\\>+|\\?+|\\@+|\\\\+|\\^+|\\_+|\\{+|\\|+|\\}+|\\~+|[a-z][a-z0-9]*(?:\\:[a-z][a-z0-9]*)*|)/;\n\n\t\t\tstream.match(tagNameRegex);\n\n\t\t\tif (stream.match('(')) {\n\t\t\t\tstate.status = STATE_ATTRIBUTE_NAME;\n\t\t\t} else {\n\t\t\t\tvar separatorRegex = /^(?:[.]|)/i;\n\t\t\t\tstream.match(separatorRegex);\n\t\t\t}\n\n\t\t\tstate.levels.push(level);\n\n\t\t\treturn 'tag';\n\t\t} else if (c == '>' || c == ']') {\n\t\t\tvar lbmLevel = state.levels[state.levels.length - 1] || 0;\n\t\t\tif (lbmLevel <= 0) {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar rbmString = '>'.repeat(lbmLevel - 1) + ']';\n\t\t\tif (stream.match(rbmString)) {\n\t\t\t\tstate.levels.pop();\n\t\t\t\treturn 'tag';\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}  else /* none of '[', ']', '`', '>' */ {\n\t\t\t// reduce text normalization overhead\n\t\t\tstream.match(/^[^\\[\\]`>]+/);\n\t\t}\n\t}\n\n\tCodeMirror.defineMode('m42kup', (config, parserConfig) => ({\n\t\tstartState(baseColumn) {\n\t\t\treturn {\n\t\t\t\tlevels: [],\n\t\t\t\tstatus: STATE_NORMAL\n\t\t\t}\n\t\t},\n\t\ttoken\n\t}));\n};"],"sourceRoot":""}